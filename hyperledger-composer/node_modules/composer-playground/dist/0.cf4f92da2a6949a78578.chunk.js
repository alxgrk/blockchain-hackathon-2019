webpackJsonp([0,2],{2645:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(17),o=n(50),s=n(38),a=n(2654),c=n(406),d=n(2649),l=n(2651),p=n(2650),u=n(883),f=n(882),m=n(269),h=function(){function e(){}return e=__decorate([i.NgModule({imports:[r.CommonModule,o.FormsModule,s.NgbModule,c.FileImporterModule,a.IdentityRoutingModule,f.FooterModule,m.DrawerModule,u.IdentityCardModule],entryComponents:[d.IdentityIssuedComponent,l.IssueIdentityComponent],declarations:[d.IdentityIssuedComponent,l.IssueIdentityComponent,p.IdentityComponent],providers:[],exports:[]})],e)}();t.IdentityModule=h},2647:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(17),o=n(50),s=n(38),a=n(2671),c=n(2683),d=n(2670),l=n(2679),p=n(2681),u=n(269),f=n(891),m=n(406),h=n(2674),g=n(885),v=n(882),y=n(883),b=n(2645),x=n(890),C=function(){function e(){}return e=__decorate([i.NgModule({imports:[r.CommonModule,o.FormsModule,s.NgbModule,c.LoginRoutingModule,h.ConnectionProfileModule,v.FooterModule,m.FileImporterModule,u.DrawerModule,g.DeployModule,b.IdentityModule,f.TutorialLinkModule,y.IdentityCardModule,x.CredentialsModule],entryComponents:[d.ImportIdentityComponent,l.CreateIdentityCardComponent,p.EditCardCredentialsComponent],declarations:[a.LoginComponent,d.ImportIdentityComponent,l.CreateIdentityCardComponent,p.EditCardCredentialsComponent]})],e)}();t.LoginModule=C},2648:function(e,t,n){var i,r=r||function(e){"use strict";if(!(void 0===e||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var t=e.document,n=function(){return e.URL||e.webkitURL||e},i=t.createElementNS("http://www.w3.org/1999/xhtml","a"),r="download"in i,o=function(e){var t=new MouseEvent("click");e.dispatchEvent(t)},s=/constructor/i.test(e.HTMLElement)||e.safari,a=/CriOS\/[\d]+/.test(navigator.userAgent),c=function(t){(e.setImmediate||e.setTimeout)(function(){throw t},0)},d="application/octet-stream",l=4e4,p=function(e){var t=function(){"string"==typeof e?n().revokeObjectURL(e):e.remove()};setTimeout(t,l)},u=function(e,t,n){t=[].concat(t);for(var i=t.length;i--;){var r=e["on"+t[i]];if("function"==typeof r)try{r.call(e,n||e)}catch(e){c(e)}}},f=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},m=function(t,c,l){l||(t=f(t));var m,h=this,g=t.type,v=g===d,y=function(){u(h,"writestart progress write writeend".split(" "))},b=function(){if((a||v&&s)&&e.FileReader){var i=new FileReader;return i.onloadend=function(){var t=a?i.result:i.result.replace(/^data:[^;]*;/,"data:attachment/file;");e.open(t,"_blank")||(e.location.href=t),t=void 0,h.readyState=h.DONE,y()},i.readAsDataURL(t),void(h.readyState=h.INIT)}if(m||(m=n().createObjectURL(t)),v)e.location.href=m;else{e.open(m,"_blank")||(e.location.href=m)}h.readyState=h.DONE,y(),p(m)};if(h.readyState=h.INIT,r)return m=n().createObjectURL(t),void setTimeout(function(){i.href=m,i.download=c,o(i),y(),p(m),h.readyState=h.DONE});b()},h=m.prototype,g=function(e,t,n){return new m(e,t||e.name||"download",n)};return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,n){return t=t||e.name||"download",n||(e=f(e)),navigator.msSaveOrOpenBlob(e,t)}:(h.abort=function(){},h.readyState=h.INIT=0,h.WRITING=1,h.DONE=2,h.error=h.onwritestart=h.onprogress=h.onwrite=h.onabort=h.onerror=h.onwriteend=null,g)}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);void 0!==e&&e.exports?e.exports.saveAs=r:null!==n(2652)&&null!==n(884)&&void 0!==(i=function(){return r}.call(t,n,t,e))&&(e.exports=i)},2649:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(38),o=n(134),s=n(3),a=function(){function e(e,t){this.activeModal=e,this.identityCardService=t,this.cardName=null,this.cardNameValid=!0}return e.prototype.ngOnInit=function(){var e=this.identityCardService.getCurrentIdentityCard(),t=e.getConnectionProfile(),n=e.getBusinessNetworkName(),i={version:1,userName:this.userID,enrollmentSecret:this.userSecret,businessNetwork:n};this.newCardRef=this.identityCardService.currentCard,this.newCard=new s.IdCard(i,t),this.newIdentity=this.userID+"\n"+this.userSecret},e.prototype.addToWallet=function(){var e=this;return this.identityCardService.addIdentityCard(this.newCard,this.cardName).then(function(t){e.activeModal.close({choice:"add",cardRef:t})}).catch(function(t){t.message.startsWith("Card already exists: ")?e.cardNameValid=!1:e.activeModal.dismiss(t)})},e.prototype.export=function(){this.activeModal.close({choice:"export",card:this.newCard})},e.prototype.setCardName=function(e){this.cardName!==e&&(this.cardName=e,this.cardNameValid=!0)},__decorate([i.Input(),__metadata("design:type",String)],e.prototype,"userID",void 0),__decorate([i.Input(),__metadata("design:type",String)],e.prototype,"userSecret",void 0),e=__decorate([i.Component({selector:"identity-issued-modal",template:n(2659),styles:[n(2662).toString()]}),__metadata("design:paramtypes",[r.NgbActiveModal,o.IdentityCardService])],e)}();t.IdentityIssuedComponent=a},2650:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(38),o=n(407),s=n(2655),a=n(2653),c=n(57),d=n(79),l=n(134),p=n(2648),u=function(){function e(e,t,n,i){this.modalService=e,this.alertService=t,this.clientService=n,this.identityCardService=i,this.currentIdentity=null,this.participants=new Map}return e.prototype.ngOnInit=function(){return this.loadAllIdentities()},e.prototype.loadAllIdentities=function(){var e=this;return this.clientService.ensureConnected().then(function(){return e.loadParticipants()}).then(function(){return e.businessNetworkName=e.clientService.getBusinessNetwork().getName(),e.clientService.getBusinessNetworkConnection().getIdentityRegistry()}).then(function(e){return e.getAll()}).then(function(t){var n=e.identityCardService.getCurrentIdentityCard().getConnectionProfile(),i=e.identityCardService.getQualifiedProfileName(n);t.sort(function(e,t){return e.name.localeCompare(t.name)}),t.filter(function(t){t.ref=e.identityCardService.getCardRefFromIdentity(t.name,e.businessNetworkName,i)}),t.forEach(function(n,i){"NetworkAdmin"!==n.participant.getType()&&"REVOKED"!==t[i].state&&(e.getParticipant(n.participant.getNamespace()+"."+n.participant.getType()+"#"+n.participant.getIdentifier())||(t[i].state="BOUND PARTICIPANT NOT FOUND"))}),e.allIdentities=t}).then(function(){return e.loadMyIdentities()}).catch(function(t){e.alertService.errorStatus$.next(t)})},e.prototype.loadMyIdentities=function(){var e=this;this.currentIdentity=this.identityCardService.currentCard;var t=this.identityCardService.getCurrentIdentityCard().getBusinessNetworkName(),n=this.identityCardService.getCurrentIdentityCard().getConnectionProfile(),i=this.identityCardService.getQualifiedProfileName(n);this.identityCards=this.identityCardService.getAllCardsForBusinessNetwork(t,i);var r=Array.from(this.identityCards.keys());this.myIDs=r.map(function(t){var n=e.allIdentities.find(function(e){return e.ref===t});return{ref:t,usable:"BOUND PARTICIPANT NOT FOUND"!==n.state&&"REVOKED"!==n.state}}).sort(function(e,t){return e.ref.localeCompare(t.ref)})},e.prototype.issueNewId=function(){var e=this,t=this.modalService.open(s.IssueIdentityComponent);return t.componentInstance.participants=this.participants,t.result.then(function(t){if(t){return"web"===e.identityCardService.getCurrentIdentityCard().getConnectionProfile()["x-type"]?e.addIdentityToWallet(t):e.showNewId(t)}}).catch(function(t){t&&t!==r.ModalDismissReasons.BACKDROP_CLICK&&t!==r.ModalDismissReasons.ESC&&e.alertService.errorStatus$.next(t)}).then(function(){return e.loadAllIdentities()}).catch(function(t){e.alertService.errorStatus$.next(t)})},e.prototype.setCurrentIdentity=function(e,t){var n=this,i=e.ref;if(this.currentIdentity===i||!e.usable)return Promise.resolve();this.currentIdentity;this.identityCardService.setCurrentIdentityCard(i).then(function(){return n.currentIdentity=i,n.alertService.busyStatus$.next({title:"Reconnecting...",text:"Using identity "+n.currentIdentity}),n.clientService.ensureConnected(!0)}).then(function(){return n.alertService.busyStatus$.next(null),n.loadAllIdentities()}).catch(function(e){n.alertService.busyStatus$.next(null),n.alertService.errorStatus$.next(e),t&&n.setCurrentIdentity({ref:n.currentIdentity,usable:!0},!1)})},e.prototype.openRemoveModal=function(e){var t=this,n=this.identityCards.get(e).getUserName(),i=this.modalService.open(o.DeleteComponent);return i.componentInstance.headerMessage="Remove ID",i.componentInstance.fileAction="remove",i.componentInstance.fileType="ID",i.componentInstance.fileName=n,i.componentInstance.deleteMessage="Take care when removing IDs: you usually cannot re-add them. Make sure you leave at least one ID that can be used to issue new IDs.",i.componentInstance.confirmButtonText="Remove",i.result.then(function(){return t.alertService.busyStatus$.next({title:"Removing ID",text:"Removing identity "+n+" from your wallet"}),t.removeIdentity(e)},function(e){e&&e!==r.ModalDismissReasons.BACKDROP_CLICK&&e!==r.ModalDismissReasons.ESC&&(t.alertService.busyStatus$.next(null),t.alertService.errorStatus$.next(e))})},e.prototype.revokeIdentity=function(e){var t=this,n=this.modalService.open(o.DeleteComponent);return n.componentInstance.headerMessage="Revoke Identity",n.componentInstance.fileType="identity",n.componentInstance.fileName=e.name,n.componentInstance.deleteMessage="Are you sure you want to do this?",n.componentInstance.confirmButtonText="Revoke",n.componentInstance.action="revoke",n.result.then(function(){return t.alertService.busyStatus$.next({title:"Revoking identity within business network",text:"Revoking identity "+e.name}),t.clientService.revokeIdentity(e).then(function(){if(t.myIDs.find(function(t){return e.ref===t.ref}))return t.removeIdentity(e.ref)}).then(function(){return t.loadAllIdentities()}).then(function(){t.alertService.busyStatus$.next(null),t.alertService.successStatus$.next({title:"Revoke Successful",text:e.name+" was successfully revoked.",icon:"#icon-bin_icon"})}).catch(function(e){t.alertService.busyStatus$.next(null),t.alertService.errorStatus$.next(e)})},function(e){e&&e!==r.ModalDismissReasons.BACKDROP_CLICK&&e!==r.ModalDismissReasons.ESC&&(t.alertService.busyStatus$.next(null),t.alertService.errorStatus$.next(e))})},e.prototype.loadParticipants=function(){var e=this;return this.clientService.getBusinessNetworkConnection().getAllParticipantRegistries().then(function(e){return Promise.all(e.map(function(e){return e.getAll()}))}).then(function(e){return Promise.all(e.reduce(function(e,t){return e.concat(t)},[]))}).then(function(t){return Promise.all(t.map(function(t){return e.participants.set(t.getFullyQualifiedIdentifier(),t)}))}).catch(function(t){e.alertService.errorStatus$.next(t)})},e.prototype.getParticipant=function(e){return this.participants.get(e)},e.prototype.removeIdentity=function(e){var t=this,n=this.identityCards.get(e).getUserName();return this.identityCardService.deleteIdentityCard(e).then(function(){return t.loadAllIdentities()}).then(function(){t.alertService.busyStatus$.next(null),t.alertService.successStatus$.next({title:"Removal Successful",text:n+" was successfully removed.",icon:"#icon-bin_icon"})}).catch(function(e){t.alertService.busyStatus$.next(null),t.alertService.errorStatus$.next(e)})},e.prototype.showNewId=function(e){var t=this,n=this.modalService.open(a.IdentityIssuedComponent);return n.componentInstance.userID=e.userID,n.componentInstance.userSecret=e.userSecret,n.result.then(function(e){if("add"===e.choice)t.alertService.successStatus$.next({title:"ID Card added to wallet",text:"The ID card "+t.identityCardService.getIdentityCard(e.cardRef).getUserName()+" was successfully added to your wallet",icon:"#icon-role_24"});else if("export"===e.choice)return t.exportIdentity(e.card)})},e.prototype.exportIdentity=function(e){var t=e.getUserName()+".card";return e.toArchive().then(function(e){var n=new Blob([e],{type:"application/octet-stream"});return p.saveAs(n,t)})},e.prototype.addIdentityToWallet=function(e){var t=this,n=this.identityCardService.getCurrentIdentityCard(),i=n.getConnectionProfile(),r=n.getBusinessNetworkName();return this.identityCardService.createIdentityCard(e.userID,null,r,e.userSecret,i).then(function(e){t.alertService.successStatus$.next({title:"ID Card added to wallet",text:"The ID card "+t.identityCardService.getIdentityCard(e).getUserName()+" was successfully added to your wallet",icon:"#icon-role_24"})})},e=__decorate([i.Component({selector:"identity",template:n(2660),styles:[n(2663).toString()]}),__metadata("design:paramtypes",[r.NgbModal,c.AlertService,d.ClientService,l.IdentityCardService])],e)}();t.IdentityComponent=u},2651:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(38);n(278),n(410),n(887);var o=n(57),s=n(79),a=function(){function e(e,t,n){var i=this;this.activeModal=e,this.alertService=t,this.clientService=n,this.participants=new Map,this.issueInProgress=!1,this.userID=null,this.participantFQI=null,this.participantFQIs=[],this.issuer=!1,this.isParticipant=!0,this.noMatchingParticipant="Named Participant does not exist in Participant Registry.",this.search=function(e){return e.debounceTime(200).distinctUntilChanged().map(function(e){return""===e?[]:i.participantFQIs.filter(function(t){return new RegExp(e,"gi").test(t)}).slice(0,10)})}}return e.prototype.ngOnInit=function(){return this.loadParticipants()},e.prototype.loadParticipants=function(){this.participantFQIs=Array.from(this.participants.keys()).sort(function(e,t){return e.localeCompare(t)})},e.prototype.issueIdentity=function(){var e=this;this.issueInProgress=!0;var t={issuer:this.issuer,affiliation:void 0},n=this.participantFQI.startsWith("resource:")?this.participantFQI:"resource:"+this.participantFQI;this.clientService.issueIdentity(this.userID,n,t).then(function(t){e.issueInProgress=!1,e.activeModal.close(t)}).catch(function(t){e.issueInProgress=!1,e.activeModal.dismiss(t)})},e.prototype.isValidParticipant=function(){var e=this.participantFQI.startsWith("resource:")?this.participantFQI.slice(9):this.participantFQI;""===this.participantFQI||this.getParticipant(e)?this.isParticipant=!0:this.isParticipant=!1},e.prototype.getParticipant=function(e){return this.participants.get(e)},__decorate([i.Input(),__metadata("design:type",Map)],e.prototype,"participants",void 0),e=__decorate([i.Component({selector:"issue-identity-modal",template:n(2661),styles:[n(2664).toString()]}),__metadata("design:paramtypes",[r.NgbActiveModal,o.AlertService,s.ClientService])],e)}();t.IssueIdentityComponent=a},2652:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},2653:function(e,t,n){"use strict";function i(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),i(n(2649))},2654:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(135),o=n(2650),s=function(){function e(){}return e=__decorate([i.NgModule({imports:[r.RouterModule.forChild([{path:"",component:o.IdentityComponent}])],exports:[r.RouterModule]})],e)}();t.IdentityRoutingModule=s},2655:function(e,t,n){"use strict";function i(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),i(n(2651))},2656:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,"identity-issued-modal .identity-issued .modal-body{display:flex;flex-direction:row;overflow-y:auto}identity-issued-modal .identity-issued .modal-body .new-card-options{position:absolute;left:291px;padding:0 16px 16px}identity-issued-modal .identity-issued .modal-body .new-card-options dl.enrollment-credentials{margin-left:16px;display:flex;flex-flow:row wrap}identity-issued-modal .identity-issued .modal-body .new-card-options dl.enrollment-credentials dd,identity-issued-modal .identity-issued .modal-body .new-card-options dl.enrollment-credentials dt{margin:0;flex:0 0 50%}identity-issued-modal .identity-issued .modal-body .new-card-options dl.enrollment-credentials dt{font-weight:700;flex:0 0 33%}identity-issued-modal .identity-issued .modal-body .new-card-options dl.enrollment-credentials dd{flex:0 0 66%}identity-issued-modal .identity-issued .modal-body .new-card-options .actions{display:flex;justify-content:flex-end;margin-bottom:16px}identity-issued-modal .identity-issued footer svg{fill:#ff5c49;vertical-align:text-top}identity-issued-modal .identity-issued footer p.footer-text{flex:1}",""])},2657:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,"identity{display:flex;width:100%}identity .main-view{overflow-y:auto;display:flex;flex-direction:column}identity .main-view .network-name{flex:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-right:16px}identity .main-view .selected-border{width:8px;margin-right:16px}identity .main-view .identity-title{display:flex;padding:8px;padding-left:0;padding-right:16px;margin-top:16px}identity .main-view .identity-title>*{font-weight:700}identity .main-view .id{flex-basis:48%}identity .main-view .cell-24{flex-basis:24%}identity .main-view .identity{background-color:#fdfdfd;box-shadow:0 2px 5px -1px #b8c1c1;margin-bottom:8px;display:flex;padding:0;padding-right:16px;height:50px;line-height:50px;cursor:default;overflow:hidden;border-radius:4px}identity .main-view .identity:hover .actions{display:block}identity .main-view .identity .selected-border--selected{background-color:#5068c2}identity .main-view .identity .actions{display:none;text-align:right}identity .main-view i{color:#19273c}identity button{box-shadow:0 2px 5px -1px #b8c1c1}identity button.secondary{border-color:#fdfdfd}",""])},2658:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,"issue-identity-modal .issue-identity p{color:#8c9696}issue-identity-modal .issue-identity ngb-typeahead-window{border:1px solid rgba(0,0,0,.15);border-radius:.25rem;width:60%}issue-identity-modal .issue-identity ngb-typeahead-window button.dropdown-item{border:none;border-radius:0;padding:2px 8px;color:#19273c;overflow-x:auto}issue-identity-modal .issue-identity ngb-typeahead-window button.dropdown-item .participant-type{font-style:italic;color:#8c9696}issue-identity-modal .issue-identity ngb-typeahead-window button.dropdown-item.active{color:#19273c;background-color:#f1f3f7}issue-identity-modal .issue-identity .keyValue{display:flex}issue-identity-modal .issue-identity .keyValue .key{flex:1;font-weight:700}issue-identity-modal .issue-identity .keyValue .value{display:flex;flex:5;flex-direction:column}issue-identity-modal .issue-identity svg{vertical-align:text-top}issue-identity-modal .issue-identity footer{width:100%}issue-identity-modal .issue-identity footer .circle-path{stroke:#fdfdfd}",""])},2659:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<section class="identity-issued">\n  <header class="modal-header">\n    <h1>Identity Issued</h1>\n    <button class="icon modal-exit" (click)="activeModal.dismiss()">\n      <svg class="ibm-icon" aria-hidden="true">\n       <use xlink:href="#icon-close_new"></use>\n      </svg>\n    </button>\n  </header>\n  <div class="modal-body">\n    <identity-card [identity]="newCard" [preview]="true"></identity-card>\n\n    <div class="new-card-options">\n      <ngb-accordion [closeOthers]="true" activeIds="option-1">\n          <ngb-panel id="option-1">\n            <ng-template ngbPanelTitle>\n              <svg class="bx--accordion__arrow" width="12" height="12" viewBox="0 0 8 12" fill-rule="evenodd">\n                <path d="M0 10.6L4.7 6 0 1.4 1.4 0l6.1 6-6.1 6z"></path>\n              </svg>\n              <span>Use it yourself</span>\n            </ng-template>\n            <ng-template ngbPanelContent>\n                <p>Just add the business network card to your wallet to start using the new identity yourself</p>\n                <label for="cardName"><h3>Give the business network card a name</h3></label>\n                <input type="text" [ngModel]="cardName" id="cardName" name="cardName"\n                       (ngModelChange)="setCardName($event)"\n                       autocomplete="off" placeholder="e.g. {{newCard.getUserName() + \'@\' + newCard.getBusinessNetworkName()}}">\n                <div *ngIf="!cardNameValid" class="error-message">The card name must be unique</div>\n                <div class="actions">\n                  <button type="button" class="primary" (click)="addToWallet()" [disabled]="!cardNameValid">Add to wallet</button>\n                </div>\n            </ng-template>\n          </ngb-panel>\n          <ngb-panel id="option-2">\n              <ng-template ngbPanelTitle>\n                  <svg class="bx--accordion__arrow" width="12" height="12" viewBox="0 0 8 12" fill-rule="evenodd">\n                    <path d="M0 10.6L4.7 6 0 1.4 1.4 0l6.1 6-6.1 6z"></path>\n                  </svg>\n                  <span>Send it to someone else</span>\n                </ng-template>\n            <ng-template ngbPanelContent>\n                <p>Another Playground user can import the business network card to their wallet to start using the new identity</p>\n                <div class="actions">\n                  <button type="button" class="primary" (click)="export();">Export Business Network Card</button>\n                </div>\n            </ng-template>\n          </ngb-panel>\n        </ngb-accordion>\n    </div>\n  </div>\n  <footer>\n    <p class="footer-text">\n      <svg class="standard-icon" aria-hidden="true">\n        <use xlink:href="#icon-warn_32"></use>\n      </svg>\n      For security, new identities can only be enrolled once\n    </p>\n  </footer>\n</section>\n'},2660:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<section class="main-view">\n    <div class="main-view-content">\n        <div class="flex" id="myIDs">\n            <div class="flex-container">\n                <h1 class="network-name" title="{{businessNetworkName}}">My IDs for {{businessNetworkName}}</h1>\n                <button id="issueID" type="button" class="secondary" (click)="issueNewId()">\n                    <span>Issue New ID</span>\n                </button>\n            </div>\n\n            <div class="identity-title">\n                <div class="selected-border"></div>\n                <div class="id">ID Name</div>\n                <div class="status">Status</div>\n            </div>\n            <div class="identity" *ngFor="let ID of myIDs" (dblclick)="setCurrentIdentity(ID, true)">\n                <div class="selected-border"\n                     [ngClass]="{\'selected-border--selected\': ID.ref === currentIdentity}"></div>\n                <div class="id">\n                    {{identityCards.get(ID.ref).getUserName()}}\n                </div>\n                <div class="flex" *ngIf="ID.ref===currentIdentity">\n                    In Use\n                </div>\n                <div class="flex" *ngIf="ID.ref!==currentIdentity && ID.usable ">\n                    <i>In my wallet</i>\n                </div>\n                <div class="flex" *ngIf="ID.ref!==currentIdentity && !ID.usable">\n                    <i>Bound participant not found</i>\n                </div>\n                <div class="actions" *ngIf="ID.ref!==currentIdentity">\n                    <button class="clear" *ngIf="ID.usable" (click)="setCurrentIdentity(ID, true)">Use now</button>\n                    <button class="clear" (click)="openRemoveModal(ID.ref); $event.stopPropagation()">Remove</button>\n                </div>\n            </div>\n        </div>\n        <div class="flex" id="allIDs">\n            <div class="flex-container">\n                <h1 class="network-name" title="{{businessNetworkName}}">All IDs for {{ businessNetworkName }}</h1>\n            </div>\n\n            <div class="identity-title">\n                <div class="selected-border"></div>\n                <div class="id cell-24">ID Name</div>\n                <div class="issued-to cell-24">Issued to</div>\n                <div class="status cell-24">Status</div>\n                <div class="actions cell-24"></div>\n            </div>\n            <div class="identity" *ngFor="let id of allIdentities">\n                <div class="selected-border"\n                     [ngClass]="{\'selected-border--selected\': id.ref === currentIdentity}"></div>\n                <div class="id cell-24">\n                    {{ id.name }}\n                </div>\n                <div class="issued-to cell-24">\n                    <span placement="top" container="body" ngbTooltip="{{ id.participant.$namespace }}.{{ id.participant.$type }}">{{ id.participant.$identifier }} ({{ id.participant.$type }})</span>\n                </div>\n                <div class="status cell-24">\n                    {{ id.state }}\n                </div>\n                <div class="cell-24">\n                    <div class="actions" *ngIf="id.ref !== currentIdentity && id.state!==\'REVOKED\'">\n                        <button class="clear" (click)="revokeIdentity(id)">Revoke</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <app-footer></app-footer>\n</section>\n'},2661:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<section class="issue-identity">\n  <header class="modal-header">\n    <h1>Issue New Identity</h1>\n    <button class="icon modal-exit" (click)="activeModal.dismiss()">\n      <svg class="ibm-icon" aria-hidden="true">\n       <use xlink:href="#icon-close_new"></use>\n      </svg>\n    </button>\n  </header>\n  <section class="modal-body">\n    <p>Issue a new ID to a participant in your business network</p>\n\n    <ng-template #participantTypeaheadResult let-r="result" let-t="term">\n      <span class="participant-id">{{getParticipant(r).getIdentifier()}}</span> <span class="participant-type">{{getParticipant(r).getType()}}</span>\n    </ng-template>\n\n    <form #issueIdentityForm="ngForm" id="issue-identity-form" (ngSubmit)="issueIdentity()">\n\n      <div class="justified-input">\n        <label class="required" for="userID">ID Name<abbr title="required">*</abbr></label>\n        <input required type="text" [(ngModel)]="userID" id="userID" name="userID" autocomplete="off">\n      </div>\n\n      <div class="keyValue">\n        <label class="key" for="participantFQI">Participant<abbr title="required">*</abbr></label>\n        <div class="value">\n            <input [ngClass]="{\'error-underline\': !isParticipant}" required type="text" [(ngModel)]="participantFQI" id="participantFQI" name="participantFQI" [ngbTypeahead]="search" [resultTemplate]="participantTypeaheadResult" autocomplete="off" (ngModelChange)="isValidParticipant()">\n            <div *ngIf="!isParticipant" class="error-message" style="position: absolute; top: 165px;">\n                {{ noMatchingParticipant }}\n            </div>\n        </div>\n      </div>\n\n      <div>\n        <input type="checkbox" [(ngModel)]="issuer" id="issuer" name="issuer">\n        <label class="checkbox-label" for="issuer">Allow this ID to issue new IDs (\n          <svg class="standard-icon" aria-hidden="true">\n            <use xlink:href="#icon-relationship_16"></use>\n          </svg>\n          )\n        </label>\n      </div>\n    </form>\n\n    <p>Issuing an identity generates a one-time secret. You can choose to send this to somebody or use it yourself when it has been issued.</p>\n  </section>\n  <footer>\n    <button type="button" class="secondary" (click)="activeModal.dismiss();">\n      <span>Cancel</span>\n    </button>\n    <button id="createNew" type="submit" form="issue-identity-form" class="primary" [disabled]="!issueIdentityForm.form.valid || issueInProgress || !isParticipant">\n      <div *ngIf="!issueInProgress">\n        <span>Create New</span>\n      </div>\n      <div *ngIf="issueInProgress" class="ibm-spinner-indeterminate small loop">\n        <div class="loader">\n          <svg class="circular" viewBox="25 25 50 50">\n            <circle class="circle-path" cx="50" cy="50" r="20"/>\n          </svg>\n        </div>\n      </div>\n    </button>\n  </footer>\n</section>\n'},2662:function(e,t,n){var i=n(2656);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2663:function(e,t,n){var i=n(2657);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2664:function(e,t,n){var i=n(2658);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2665:function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(38),o=n(57),s=function(){function t(e,t){this.alertService=e,this.activeModal=t,this.expandInput=!1,this.maxFileSize=5242880,this.supportedFileTypes=[".pem"],this.certAdded=!1,this.removeDisabled=!0,this.cert=null,this.sslTargetNameOverride=null,this.type=null}return t.prototype.fileDetected=function(){this.expandInput=!0},t.prototype.fileLeft=function(){this.expandInput=!1},t.prototype.fileAccepted=function(e){var t=this;this.certAdded=!0;e.name.substring(e.name.lastIndexOf("."));this.getDataBuffer(e).then(function(e){t.cert=e.toString()}).catch(function(e){t.fileRejected(e)})},t.prototype.getDataBuffer=function(t){return new Promise(function(n,i){var r=new FileReader;r.readAsArrayBuffer(t),r.onload=function(){var t=e.from(r.result);n(t)},r.onerror=function(e){i(e)}})},t.prototype.fileRejected=function(e){this.alertService.errorStatus$.next(e)},t.prototype.addCertificate=function(){var e=this.cert.replace(/\\r\\n|\\n\\r|\\n/g,"\n");this.activeModal.close({cert:e,sslTargetNameOverride:this.sslTargetNameOverride})},t.prototype.removeCertificate=function(){this.activeModal.close(null)},__decorate([i.Input(),__metadata("design:type",String)],t.prototype,"cert",void 0),t=__decorate([i.Component({selector:"add-certificate",template:n(2697),styles:[n(2708).toString()]}),__metadata("design:paramtypes",[o.AlertService,r.NgbActiveModal])],t)}();t.AddCertificateComponent=s}).call(t,n(5).Buffer)},2666:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(38),o=n(886),s=function(){function e(e,t){this.activeModal=e,this.connectionProfileService=t,this.certificate=this.connectionProfileService.getCertificate()}return e=__decorate([i.Component({selector:"view-certificate",template:n(2699),styles:[n(2710).toString()]}),__metadata("design:paramtypes",[r.NgbActiveModal,o.ConnectionProfileService])],e)}();t.ViewCertificateComponent=s},2670:function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(269),o=n(3),s=n(134),a=function(){function t(e,t,n){this.activeDrawer=e,this.drawerService=t,this.identityCardService=n,this.importInProgress=!1,this.expandInput=!1,this.maxFileSize=52428800,this.supportedFileTypes=[".card"],this.cardNameValid=!0}return t.prototype.removeFile=function(){this.expandInput=!1,this.identityCard=null},t.prototype.fileDetected=function(){this.expandInput=!0},t.prototype.fileLeft=function(){this.expandInput=!1},t.prototype.fileAccepted=function(t){var n=this,i=new FileReader;i.onload=function(){var t=e.from(i.result);n.readCard(t)},i.readAsArrayBuffer(t)},t.prototype.readCard=function(e){var t=this;o.IdCard.fromArchive(e).then(function(e){t.expandInput=!0,t.identityCard=e}).catch(function(e){t.fileRejected(e.message||"Could not read business network card")})},t.prototype.fileRejected=function(e){this.activeDrawer.dismiss(e)},t.prototype.import=function(){var e=this;return this.identityCardService.addIdentityCard(this.identityCard,this.cardName).then(function(t){e.activeDrawer.close(t)}).catch(function(t){t.message.startsWith("Card already exists: ")?e.cardNameValid=!1:e.activeDrawer.dismiss(t)})},t.prototype.setCardName=function(e){this.cardName!==e&&(this.cardName=e,this.cardNameValid=!0)},t=__decorate([i.Component({selector:"import-identity",template:n(2706),styles:[n(2717).toString()]}),__metadata("design:paramtypes",[r.ActiveDrawer,r.DrawerService,s.IdentityCardService])],t)}();t.ImportIdentityComponent=a}).call(t,n(5).Buffer)},2671:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(135),o=n(79),s=n(270),a=n(57),c=n(407),d=n(888),l=n(134),p=n(119),u=n(157),f=n(38),m=n(269),h=n(2682),g=n(2648),v=n(409),y=n(206),b=function(){function e(e,t,n,i,r,o,s,a,c,d,l){this.router=e,this.route=t,this.clientService=n,this.initializationService=i,this.identityCardService=r,this.modalService=o,this.drawerService=s,this.alertService=a,this.configService=c,this.sampleBusinessNetworkService=d,this.adminService=l,this.usingLocally=!1,this.showDeployNetwork=!1,this.editingConnectionProfile=null,this.creatingIdCard=!1,this.showSubScreen=!1,this.showCredentials=!0,this.config=new u.Config}return e.prototype.ngOnInit=function(){var e=this;return this.initializationService.initialize().then(function(){return e.usingLocally=!e.configService.isWebOnly(),e.config=e.configService.getConfig(),e.loadIdentityCards()}).then(function(){e.router.events.subscribe(function(t){console.log("ROUTER SUB",t),t instanceof r.NavigationEnd&&e.handleRouteChange()}),e.handleRouteChange()})},e.prototype.handleRouteChange=function(){switch(this.route.snapshot.fragment){case"deploy":this.deployNetwork(decodeURIComponent(this.route.snapshot.queryParams.ref));break;case"create-card":this.createIdCard();break;default:this.route.snapshot.fragment||Object.keys(this.route.snapshot.queryParams).length>0?this.goLoginMain():this.closeSubView()}},e.prototype.goLoginMain=function(){this.router.navigate(["/login"])},e.prototype.goDeploy=function(e){this.router.navigate(["/login"],{fragment:"deploy",queryParams:{ref:e}})},e.prototype.goCreateCard=function(){this.router.navigate(["/login"],{fragment:"create-card"})},e.prototype.loadIdentityCards=function(e){var t=this;return void 0===e&&(e=!1),this.identityCardService.getIdentityCards(e).then(function(e){t.indestructibleCards=t.identityCardService.getIndestructibleIdentityCards(),t.idCards=e,t.connectionProfileNames=new Map,t.connectionProfiles=new Map;var n=Array.from(e.keys()).map(function(n){var i=e.get(n),r=i.getConnectionProfile();if(!("web"===r["x-type"]&&t.indestructibleCards.indexOf(n)>-1)){var o=t.identityCardService.getQualifiedProfileName(r);return t.connectionProfileNames.has(o)||(t.connectionProfileNames.set(o,r.name),t.connectionProfiles.set(o,r)),[o,n]}}).reduce(function(e,t){if(!t)return e;var n=e.get(t[0])||[],i=t[1];return e.set(t[0],n.concat([i]))},new Map);n.forEach(function(e,n){e.sort(t.sortIdCards.bind(t))});var i=Array.from(t.connectionProfileNames.keys()),r=i.indexOf("web-$default");r>-1&&i.splice(r,1),i.sort(function(e,n){var i=t.connectionProfileNames.get(e),r=t.connectionProfileNames.get(n);return i<r?-1:i>r?1:void 0}),i.push("web-$default"),t.connectionProfileRefs=i,t.idCardRefs=n}).catch(function(e){t.alertService.errorStatus$.next(e)})},e.prototype.changeIdentity=function(e,t){var n,i=this,r=this.idCards.get(e),o=r.getBusinessNetworkName();if(this.canDeploy(t))n=Promise.resolve();else{var s=this.modalService.open(d.ConnectConfirmComponent);s.componentInstance.network=o,n=s.result}return n.then(function(t){return i.identityCardService.setCurrentIdentityCard(e)}).then(function(){return i.clientService.ensureConnected(!0)}).then(function(){return i.router.navigate(["editor"])}).catch(function(e){e&&e!==f.ModalDismissReasons.BACKDROP_CLICK&&e!==f.ModalDismissReasons.ESC&&i.alertService.errorStatus$.next(e)})},e.prototype.deploySample=function(e){var t=this,n=this.identityCardService.getIdentityCardRefsWithProfileAndRole(e,"PeerAdmin")[0];return this.identityCardService.setCurrentIdentityCard(n),this.alertService.busyStatus$.next({title:"Getting sample network",force:!0}),this.sampleBusinessNetworkService.getSampleList().then(function(e){var n=e[0];return t.sampleBusinessNetworkService.getChosenSample(n)}).then(function(e){return t.sampleBusinessNetworkService.deployBusinessNetwork(e,"playgroundSample@basic-sample-network","my-basic-sample","The Composer basic sample network",null,null,null)}).then(function(){return t.loadIdentityCards(!0)}).then(function(){return t.alertService.busyStatus$.next({title:"Connecting to network",force:!0}),t.changeIdentity("playgroundSample@basic-sample-network",e)})},e.prototype.editConnectionProfile=function(e){this.showSubScreen=!0,this.editingConnectionProfile=e},e.prototype.closeSubView=function(){this.showSubScreen=!1,this.showDeployNetwork=!1,this.creatingIdCard=!1,delete this.editingConnectionProfile},e.prototype.createIdCard=function(){if(!this.usingLocally)return void this.goLoginMain();this.showSubScreen=!0,this.creatingIdCard=!0},e.prototype.finishedCardCreation=function(e){if(e)return this.goLoginMain(),this.loadIdentityCards();this.goLoginMain()},e.prototype.canDeploy=function(e){return this.identityCardService.canDeploy(e)},e.prototype.deployNetwork=function(e){if(!this.canDeploy(e))return void this.goLoginMain();var t=this.identityCardService.getAdminCardRef(e,l.IdentityCardService.peerAdminRole);this.identityCardService.setCurrentIdentityCard(t),this.indestructibleCards.indexOf(t)>-1?this.showCredentials=!1:this.showCredentials=!0,this.showSubScreen=!0,this.showDeployNetwork=!0},e.prototype.finishedDeploying=function(){return this.goLoginMain(),this.loadIdentityCards(!0)},e.prototype.importIdentity=function(){var e=this;this.drawerService.open(h.ImportIdentityComponent).result.then(function(t){e.alertService.successStatus$.next({title:"ID Card imported",text:"The ID card "+e.identityCardService.getIdentityCard(t).getUserName()+" was successfully imported",icon:"#icon-role_24"})}).then(function(){return e.loadIdentityCards()}).catch(function(t){t!==m.DrawerDismissReasons.ESC&&e.alertService.errorStatus$.next(t)})},e.prototype.exportIdentity=function(e){var t,n=this;return this.identityCardService.getIdentityCardForExport(e).then(function(e){return t=e.getUserName()+".card",e.toArchive()}).then(function(e){var n=new Blob([e],{type:"application/octet-stream"});g.saveAs(n,t)}).catch(function(e){n.alertService.errorStatus$.next(e)})},e.prototype.removeIdentity=function(e){var t=this,n=this.idCards.get(e),i=n.getUserName(),r=this.modalService.open(c.DeleteComponent);r.componentInstance.headerMessage="Remove ID Card",r.componentInstance.fileName=i,r.componentInstance.fileType="ID Card",r.componentInstance.deleteMessage="Are you sure you want to do this?",r.componentInstance.deleteFrom="My Wallet",r.componentInstance.confirmButtonText="Remove",r.result.then(function(i){if(i){var r=void 0,o=t.identityCardService.getAllCardsForBusinessNetwork(n.getBusinessNetworkName(),t.identityCardService.getQualifiedProfileName(n.getConnectionProfile()));return r="web"===n.getConnectionProfile()["x-type"]&&1===o.size?t.adminService.connect(e,n,!0).then(function(){return t.alertService.busyStatus$.next({title:"Undeploying business network",force:!0}),t.adminService.undeploy(n.getBusinessNetworkName())}):Promise.resolve(),r.then(function(){return t.identityCardService.deleteIdentityCard(e).then(function(){return t.alertService.busyStatus$.next(null),t.alertService.successStatus$.next({title:"ID Card Removed",text:"The ID card was successfully removed from My Wallet.",icon:"#icon-bin_icon"}),t.loadIdentityCards()})}).catch(function(e){t.alertService.errorStatus$.next(e)})}},function(e){e&&1!==e&&t.alertService.errorStatus$.next(e)})},e.prototype.sortIdCards=function(e,t){var n=this.identityCardService.getIdentityCard(e),i=this.identityCardService.getIdentityCard(t),r=n.getBusinessNetworkName(),o=i.getBusinessNetworkName(),s=n.getUserName(),a=i.getUserName(),c=n.getRoles(),d=i.getRoles(),l=this.sortBy(r,o);return 0!==l?l:0!==(l=this.sortBy(c,d))?l:void(l=this.sortBy(s,a))},e.prototype.sortBy=function(e,t){return e||t?!e&&t?-1:e&&!t?1:e<t?-1:e>t?1:0:0},e=__decorate([i.Component({selector:"app-login",template:n(2707),styles:[n(2718).toString()]}),__metadata("design:paramtypes",[r.Router,r.ActivatedRoute,o.ClientService,s.InitializationService,l.IdentityCardService,f.NgbModal,m.DrawerService,a.AlertService,p.ConfigService,v.SampleBusinessNetworkService,y.AdminService])],e)}();t.LoginComponent=b},2673:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(38),o=n(886),s=n(2665),a=n(2666),c=n(57),d=n(2684),l=n(412),p=function(){function e(e,t,n){this.connectionProfileService=e,this.modalService=t,this.alertService=n,this.profileUpdated=new i.EventEmitter,this.connectionProfileData=null,this.basic={name:null,description:null,version:"1.0.0",organization:"Org1",mspid:"Org1MSP",channel:"composerchannel",commitTimeout:null},this.orderers=[],this.defaultOrderer={name:"orderer.example.com",url:"grpc://localhost:7050",grpcOptions:{sslTargetNameOverride:null,grpcMaxSendMessageLength:null,grpcHttp2KeepAliveTime:null}},this.ordererTimeout="30",this.peers=[],this.defaultPeer={name:"peer.example.com",url:"grpc://localhost:7051",grpcOptions:{sslTargetNameOverride:null,grpcMaxSendMessageLength:null,grpcHttp2KeepAliveTime:null},organization:!0,endorsingPeer:!0,chaincodeQuery:!0,ledgerQuery:!0,eventSource:!0},this.peerTimeOut={endorser:"30",eventHub:"30",eventReg:"30"},this.ca={url:"http://localhost:7054",caName:null,httpOptions:{verify:!1}}}return Object.defineProperty(e.prototype,"connectionProfile",{set:function(e){e?this.connectionProfileData=e:(this.connectionProfileData={},this.connectionProfileData["x-type"]="hlfv1"),this.startEditing()},enumerable:!0,configurable:!0}),e.prototype.startEditing=function(){if("hlfv1"!==this.connectionProfileData["x-type"])throw new Error("Unknown connection profile type");if(this.basic.name=l.has(this.connectionProfileData,"name")?this.connectionProfileData.name:this.basic.name,this.basic.description=l.has(this.connectionProfileData,"description")?this.connectionProfileData.description:this.basic.description,this.basic.version=l.has(this.connectionProfileData,"version")?this.connectionProfileData.version:this.basic.version,this.basic.organization=l.has(this.connectionProfileData,"client.organization")?this.connectionProfileData.client.organization:this.basic.organization,this.basic.mspid=l.has(this.connectionProfileData,"organizations")?this.connectionProfileData.organizations[Object.keys(this.connectionProfileData.organizations)[0]].mspid:this.basic.mspid,this.basic.channel=l.has(this.connectionProfileData,"channels")?Object.keys(this.connectionProfileData.channels)[0]:this.basic.channel,this.basic.commitTimeout=l.has(this.connectionProfileData,"x-commitTimeout")?this.connectionProfileData["x-commitTimeout"]:this.basic.commitTimeout,this.ordererTimeout=l.has(this.connectionProfileData,"client.connection.timeout.orderer")?this.connectionProfileData.client.connection.timeout.orderer:this.ordererTimeout,this.peerTimeOut=l.has(this.connectionProfileData,"client.connection.timeout.peer")?this.connectionProfileData.client.connection.timeout.peer:this.peerTimeOut,l.has(this.connectionProfileData,"orderers"))this.initOrderers();else{var e=d(this.defaultOrderer);this.orderers.push(e)}if(l.has(this.connectionProfileData,"peers"))this.initPeers();else{var t=d(this.defaultPeer);this.peers.push(t)}l.has(this.connectionProfileData,"certificateAuthorities")&&this.initCa()},e.prototype.initCa=function(){var e=Object.keys(this.connectionProfileData.certificateAuthorities)[0];this.ca=this.connectionProfileData.certificateAuthorities[e],l.has(this.ca,"httpOptions.verify")||(this.ca.httpOptions={verify:!1}),l.has(this.ca,"tlsCACerts")&&!this.ca.httpOptions.verify&&delete this.ca.tlsCACerts},e.prototype.initOrderers=function(){var e=this,t=this.connectionProfileData.orderers;Object.keys(t).forEach(function(n){var i=d(t[n]);i.name=n,i.grpcOptions={sslTargetNameOverride:null,grpcMaxSendMessageLength:null,grpcHttp2KeepAliveTime:null},l.has(t[n],"grpcOptions")?(l.has(t[n].grpcOptions,"ssl-target-name-override")?i.grpcOptions.sslTargetNameOverride=t[n].grpcOptions["ssl-target-name-override"]:delete i.grpcOptions.sslTargetNameOverride,l.has(t[n].grpcOptions,"grpc-max-send-message-length")?i.grpcOptions.grpcMaxSendMessageLength=t[n].grpcOptions["grpc-max-send-message-length"]:delete i.grpcOptions.grpcMaxSendMessageLength,l.has(t[n].grpcOptions,"grpc.http2.keepalive_time")?i.grpcOptions.grpcHttp2KeepAliveTime=t[n].grpcOptions["grpc.http2.keepalive_time"]:delete i.grpcOptions.grpcHttp2KeepAliveTime):i.grpcOptions={},e.orderers.push(i)})},e.prototype.addOrderer=function(){var e=this.orderers.length,t=d(this.defaultOrderer);t.name="orderer"+e+".example.com",delete t.tlsCACerts,this.orderers.push(t)},e.prototype.removeOrderer=function(e){this.orderers.splice(e,1)},e.prototype.initPeers=function(){var e=this,t=this.connectionProfileData.peers;Object.keys(t).forEach(function(n){var i=d(t[n]);i.name=n,i.grpcOptions={sslTargetNameOverride:null,grpcMaxSendMessageLength:null,grpcHttp2KeepAliveTime:null},l.has(t[n],"grpcOptions")?(l.has(t[n].grpcOptions,"ssl-target-name-override")?i.grpcOptions.sslTargetNameOverride=t[n].grpcOptions["ssl-target-name-override"]:delete i.grpcOptions.sslTargetNameOverride,l.has(t[n].grpcOptions,"grpc-max-send-message-length")?i.grpcOptions.grpcMaxSendMessageLength=t[n].grpcOptions["grpc-max-send-message-length"]:delete i.grpcOptions.grpcMaxSendMessageLength,l.has(t[n].grpcOptions,"grpc.http2.keepalive_time")?i.grpcOptions.grpcHttp2KeepAliveTime=t[n].grpcOptions["grpc.http2.keepalive_time"]:delete i.grpcOptions.grpcHttp2KeepAliveTime):i.grpcOptions={},e.peers.push(i)})},e.prototype.addPeer=function(){var e=this.peers.length,t=d(this.defaultPeer);t.name="peer"+e+".example.com",delete t.tlsCACerts,this.peers.push(t)},e.prototype.removePeer=function(e){this.peers.splice(e,1)},e.prototype.stopEditing=function(){this.profileUpdated.emit({update:!1})},e.prototype.handleKeyPress=function(e){if(e&&13===e.keyCode){e.preventDefault();var t=this.getActiveElement();if("button"===t.tagName.toLowerCase())t.click();else if("input"===t.tagName.toLowerCase()&&"checkbox"===t.type.toLowerCase())t.click();else{if(!this.formValid(this.connectionProfileForm.form)){var n=this.connectionProfileForm.form.controls;for(var i in n)n[i].markAsDirty();return}this.onSubmit()}}},e.prototype.onSubmit=function(){var e=this,t={name:null,description:null,version:null,client:null,orderers:Object(),peers:Object(),channels:Object(),certificateAuthorities:Object(),organizations:Object()};if("hlfv1"!==this.connectionProfileData["x-type"])throw new Error("Unknown profile type");t["x-type"]=this.connectionProfileData["x-type"],t["x-commitTimeout"]=this.basic.commitTimeout?this.basic.commitTimeout:100,t.name=this.basic.name,t.description=this.basic.description,t.description||delete t.description,t.version=this.basic.version,t.client={organization:this.basic.organization,connection:{timeout:{peer:this.peerTimeOut,orderer:this.ordererTimeout}}},this.orderers.forEach(function(e){l.has(e,"tlsCACerts.pem")||delete e.tlsCACerts,t.orderers[e.name]=e,l.has(t.orderers[e.name],"grpcOptions.sslTargetNameOverride")&&t.orderers[e.name].grpcOptions.sslTargetNameOverride&&(t.orderers[e.name].grpcOptions["ssl-target-name-override"]=t.orderers[e.name].grpcOptions.sslTargetNameOverride),delete t.orderers[e.name].grpcOptions.sslTargetNameOverride,l.has(t.orderers[e.name],"grpcOptions.grpcMaxSendMessageLength")&&t.orderers[e.name].grpcOptions.grpcMaxSendMessageLength&&(t.orderers[e.name].grpcOptions["grpc-max-send-message-length"]=parseFloat(t.orderers[e.name].grpcOptions.grpcMaxSendMessageLength)),delete t.orderers[e.name].grpcOptions.grpcMaxSendMessageLength,l.has(t.orderers[e.name],"grpcOptions.grpcHttp2KeepAliveTime")&&t.orderers[e.name].grpcOptions.grpcHttp2KeepAliveTime&&(t.orderers[e.name].grpcOptions["grpc.http2.keepalive_time"]=parseFloat(t.orderers[e.name].grpcOptions.grpcHttp2KeepAliveTime)),delete t.orderers[e.name].grpcOptions.grpcHttp2KeepAliveTime,delete t.orderers[e.name].name}),this.peers.forEach(function(e){l.has(e,"tlsCACerts.pem")||delete e.tlsCACerts,t.peers[e.name]={};for(var n in e)t.peers[e.name][n]=e[n];l.has(t.peers[e.name],"grpcOptions.sslTargetNameOverride")&&t.peers[e.name].grpcOptions.sslTargetNameOverride&&(t.peers[e.name].grpcOptions["ssl-target-name-override"]=t.peers[e.name].grpcOptions.sslTargetNameOverride),delete t.peers[e.name].grpcOptions.sslTargetNameOverride,l.has(t.peers[e.name],"grpcOptions.grpcMaxSendMessageLength")&&t.peers[e.name].grpcOptions.grpcMaxSendMessageLength&&(t.peers[e.name].grpcOptions["grpc-max-send-message-length"]=parseFloat(t.peers[e.name].grpcOptions.grpcMaxSendMessageLength)),delete t.peers[e.name].grpcOptions.grpcMaxSendMessageLength,l.has(t.peers[e.name],"grpcOptions.grpcHttp2KeepAliveTime")&&t.peers[e.name].grpcOptions.grpcHttp2KeepAliveTime&&(t.peers[e.name].grpcOptions["grpc.http2.keepalive_time"]=parseFloat(t.peers[e.name].grpcOptions.grpcHttp2KeepAliveTime)),delete t.peers[e.name].grpcOptions.grpcHttp2KeepAliveTime,delete t.peers[e.name].organization,delete t.peers[e.name].name}),t.channels[this.basic.channel]={},t.channels[this.basic.channel].orderers=Object.keys(t.orderers),t.channels[this.basic.channel].peers={},Object.keys(t.peers).forEach(function(n){t.channels[e.basic.channel].peers[n]={}});var n=this.ca.caName?this.ca.caName:"ca-org1";this.ca.httpOptions.verify?l.has(this.ca,"tlsCACerts.pem")||delete this.ca.tlsCACerts:(delete this.ca.tlsCACerts,delete this.ca.httpOptions),t.certificateAuthorities[n]=this.ca,t.organizations[this.basic.organization]={mspid:this.basic.mspid,peers:this.peers.filter(function(e){return e.organization}).map(function(e){return e.name}),certificateAuthorities:Object.keys(t.certificateAuthorities)},this.connectionProfileData=t,this.profileUpdated.emit({updated:!0,connectionProfile:t})},e.prototype.openAddCertificateModal=function(e,t){var n,i,r,o,a=this;if("orderers"===t||"peers"===t){if(void 0===(r=this[t][e])){var c="orderers"===t?"Orderer":"Peer";throw new Error(c+" at index "+e+" does not exist.")}o=d(this[t][e]),l.has(r,"grpcOptions")?l.has(r.grpcOptions,"sslTargetNameOverride")||(r.grpcOptions.sslTargetNameOverride=null):r.grpcOptions={sslTargetNameOverride:null},i=r.grpcOptions.sslTargetNameOverride}else{if("ca"!==t)throw new Error("Unrecognized type "+t);if(void 0===(r=this[t]))throw new Error("CA does not exist.");o=d(this[t])}l.has(r,"tlsCACerts")?l.has(r.tlsCACerts,"pem")||(r.tlsCACerts.pem=null):(r.tlsCACerts={},r.tlsCACerts.pem=null),n=r.tlsCACerts.pem;var p=this.modalService.open(s.AddCertificateComponent);return p.componentInstance.type=t,p.componentInstance.cert=n,p.componentInstance.sslTargetNameOverride=i,p.result.then(function(e){e?(r.tlsCACerts.pem=e.cert,"ca"!==t&&(r.grpcOptions.sslTargetNameOverride=e.sslTargetNameOverride)):(delete r.tlsCACerts,"ca"!==t&&delete r.grpcOptions.sslTargetNameOverride)},function(n){n&&1!==n?a.alertService.errorStatus$.next(n):n||("orderers"===t||"peers"===t?a[t][e]=d(o):"ca"===t&&(a[t]=d(o)))})},e.prototype.showCertificate=function(e){this.connectionProfileService.setCertificate(e),this.modalService.open(a.ViewCertificateComponent)},e.prototype.isNumber=function(e){return void 0!==e&&(null===e||""===e||(e=e.toString(),!!e.match(/^(\d+|\d+\.\d+)$/)))},e.prototype.formValid=function(e){return!(document.getElementsByClassName("error-message").length>0)&&e.valid},e.prototype.setVerify=function(){"s"!==this.ca.url.substring(this.ca.url.indexOf("://")-1,this.ca.url.indexOf("://"))&&(this.ca.httpOptions.verify=!1,delete this.ca.tlsCACerts)},e.prototype.clearCaTls=function(){delete this.ca.tlsCACerts},e.prototype.getActiveElement=function(){return document.activeElement},__decorate([i.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],e.prototype,"connectionProfile",null),__decorate([i.ViewChild("connectionProfileForm"),__metadata("design:type",Object)],e.prototype,"connectionProfileForm",void 0),__decorate([i.Output(),__metadata("design:type",Object)],e.prototype,"profileUpdated",void 0),e=__decorate([i.Component({selector:"connection-profile",template:n(2698),styles:[n(2709).toString()]}),__metadata("design:paramtypes",[o.ConnectionProfileService,r.NgbModal,c.AlertService])],e)}();t.ConnectionProfileComponent=p},2674:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(17),o=n(50),s=n(38),a=n(2673),c=n(2665),d=n(2666),l=n(406),p=function(){function e(){}return e=__decorate([i.NgModule({imports:[r.CommonModule,o.FormsModule,s.NgbModule,o.ReactiveFormsModule,l.FileImporterModule],entryComponents:[c.AddCertificateComponent,d.ViewCertificateComponent],declarations:[a.ConnectionProfileComponent,c.AddCertificateComponent,d.ViewCertificateComponent],providers:[],exports:[a.ConnectionProfileComponent]})],e)}();t.ConnectionProfileModule=p},2678:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=function(){function e(){this.connectionProfileRefs=[],this.connectionProfileNames=[],this.connectionProfiles=[],this.finishedCardCreation=new i.EventEmitter,this.creatingIdCard=!0,this.editingCredentials=!1,this.creatingWithProfile=!1,this.profileChosen=!1}return e.prototype.cancelCreate=function(){this.editingCredentials=!1,this.creatingWithProfile=!1,this.finishedCardCreation.emit(!1)},e.prototype.completeCardAddition=function(e){e?this.finishedCardCreation.emit(e):this.cancelCreate()},e.prototype.setConnectionProfile=function(e){"_$v1"===e.valueOf()?(this.newConnection=!0,this.profileChosen=!0):(this.newConnection=!1,this.wrappedConnectionProfile=this.connectionProfiles.get(e),this.profileChosen=!0)},e.prototype.createWithExistingProfile=function(){this.creatingIdCard=!1,this.editingCredentials=!0},e.prototype.createWithNewProfile=function(){this.creatingIdCard=!1,this.creatingWithProfile=!0},e.prototype.finishedEditingConnectionProfile=function(e){!1===e.update?this.cancelCreate():(this.creatingWithProfile=!1,this.wrappedConnectionProfile=e.connectionProfile,this.createWithExistingProfile())},__decorate([i.Input(),__metadata("design:type",Object)],e.prototype,"connectionProfileRefs",void 0),__decorate([i.Input(),__metadata("design:type",Object)],e.prototype,"connectionProfileNames",void 0),__decorate([i.Input(),__metadata("design:type",Object)],e.prototype,"connectionProfiles",void 0),__decorate([i.Output(),__metadata("design:type",Object)],e.prototype,"finishedCardCreation",void 0),e=__decorate([i.Component({selector:"create-identity-card",template:n(2704),styles:[n(2715).toString()]})],e)}();t.CreateIdentityCardComponent=r},2679:function(e,t,n){"use strict";function i(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),i(n(2678))},2680:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(57),o=n(134),s=function(){function e(e,t){this.idCardService=e,this.alertService=t,this.idCardAdded=new i.EventEmitter,this.maxFileSize=5242880,this.supportedFileTypes=[".pem"],this.expandInput=!1,this.userId=null,this.userSecret=null,this.busNetName=null,this.addInProgress=!1,this.useCerts=!0,this.useParticipantCard=!0,this.peerAdmin=!1,this.channelAdmin=!1,this.cardName=null,this.cardNameValid=!0}return e.prototype.close=function(){this.idCardAdded.emit(!1)},e.prototype.useParticipantCardType=function(e){this.useParticipantCard=e},e.prototype.validContents=function(){if(this.useCerts){if(!this.addedPublicCertificate||0===this.addedPublicCertificate.length)return!1;if(!this.addedPrivateCertificate||0===this.addedPrivateCertificate.length)return!1;if(!this.userId||0===this.userId.length)return!1;if(this.addInProgress)return!1}else{if(!this.userId||0===this.userId.length)return!1;if(!this.userSecret||0===this.userSecret.length)return!1;if(this.addInProgress)return!1}if(!this.cardNameValid)return!1;if(this.useParticipantCard){if(!this.busNetName)return!1}else if(!this.peerAdmin&&!this.channelAdmin)return!1;return!0},e.prototype.submitCard=function(e){e&&13!==e.keyCode||!this.validContents()||this.addIdentityCard()},e.prototype.addIdentityCard=function(){var e=this;this.addInProgress=!0,this.alertService.busyStatus$.next({title:"Adding ID card",text:"Adding ID card"});var t=this.useCerts?{certificate:this.addedPublicCertificate,privateKey:this.addedPrivateCertificate}:null,n=[];return this.peerAdmin&&n.push("PeerAdmin"),this.channelAdmin&&n.push("ChannelAdmin"),this.idCardService.createIdentityCard(this.userId,this.cardName,this.busNetName,this.userSecret,this.connectionProfile,t,n).then(function(){e.alertService.busyStatus$.next(null),e.alertService.successStatus$.next({title:"ID Card Added",text:"The ID card was successfully added to My Wallet.",icon:"#icon-role_24"}),e.addInProgress=!1,e.idCardAdded.emit(!0)}).catch(function(t){e.addInProgress=!1,e.alertService.busyStatus$.next(null),t.message.startsWith("Card already exists: ")?e.cardNameValid=!1:(e.alertService.errorStatus$.next(t),e.idCardAdded.emit(!1))})},e.prototype.updateCredentials=function(e){if(!e||!e.userId)return this.userId=null,this.userSecret=null,this.addedPrivateCertificate=null,void(this.addedPublicCertificate=null);e.secret?(this.useCerts=!1,this.userSecret=e.secret):(this.addedPublicCertificate=e.cert,this.addedPrivateCertificate=e.key),this.userId=e.userId},e.prototype.setCardName=function(e){this.cardName!==e&&(this.cardName=e,this.cardNameValid=!0)},__decorate([i.Input(),__metadata("design:type",Object)],e.prototype,"connectionProfile",void 0),__decorate([i.Output(),__metadata("design:type",Object)],e.prototype,"idCardAdded",void 0),e=__decorate([i.Component({selector:"edit-card-credentials",template:n(2705),styles:[n(2716).toString()]}),__metadata("design:paramtypes",[o.IdentityCardService,r.AlertService])],e)}();t.EditCardCredentialsComponent=s},2681:function(e,t,n){"use strict";function i(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),i(n(2680))},2682:function(e,t,n){"use strict";function i(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),i(n(2670))},2683:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=n(135),o=n(2671),s=function(){function e(){}return e=__decorate([i.NgModule({imports:[r.RouterModule.forChild([{path:"",component:o.LoginComponent}])],exports:[r.RouterModule]})],e)}();t.LoginRoutingModule=s},2684:function(e,t,n){(function(t){var n=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}function n(i,r,o,s,p){function u(i,o){if(null===i)return null;if(0===o)return i;var g,v;if("object"!=typeof i)return i;if(e(i,c))g=new c;else if(e(i,d))g=new d;else if(e(i,l))g=new l(function(e,t){i.then(function(t){e(u(t,o-1))},function(e){t(u(e,o-1))})});else if(n.__isArray(i))g=[];else if(n.__isRegExp(i))g=new RegExp(i.source,a(i)),i.lastIndex&&(g.lastIndex=i.lastIndex);else if(n.__isDate(i))g=new Date(i.getTime());else{if(h&&t.isBuffer(i))return g=new t(i.length),i.copy(g),g;e(i,Error)?g=Object.create(i):void 0===s?(v=Object.getPrototypeOf(i),g=Object.create(v)):(g=Object.create(s),v=s)}if(r){var y=f.indexOf(i);if(-1!=y)return m[y];f.push(i),m.push(g)}e(i,c)&&i.forEach(function(e,t){var n=u(t,o-1),i=u(e,o-1);g.set(n,i)}),e(i,d)&&i.forEach(function(e){var t=u(e,o-1);g.add(t)});for(var b in i){var x;v&&(x=Object.getOwnPropertyDescriptor(v,b)),x&&null==x.set||(g[b]=u(i[b],o-1))}if(Object.getOwnPropertySymbols)for(var C=Object.getOwnPropertySymbols(i),b=0;b<C.length;b++){var w=C[b],I=Object.getOwnPropertyDescriptor(i,w);(!I||I.enumerable||p)&&(g[w]=u(i[w],o-1),I.enumerable||Object.defineProperty(g,w,{enumerable:!1}))}if(p)for(var S=Object.getOwnPropertyNames(i),b=0;b<S.length;b++){var N=S[b],I=Object.getOwnPropertyDescriptor(i,N);I&&I.enumerable||(g[N]=u(i[N],o-1),Object.defineProperty(g,N,{enumerable:!1}))}return g}"object"==typeof r&&(o=r.depth,s=r.prototype,p=r.includeNonEnumerable,r=r.circular);var f=[],m=[],h=void 0!==t;return void 0===r&&(r=!0),void 0===o&&(o=1/0),u(i,o)}function i(e){return Object.prototype.toString.call(e)}function r(e){return"object"==typeof e&&"[object Date]"===i(e)}function o(e){return"object"==typeof e&&"[object Array]"===i(e)}function s(e){return"object"==typeof e&&"[object RegExp]"===i(e)}function a(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}var c;try{c=Map}catch(e){c=function(){}}var d;try{d=Set}catch(e){d=function(){}}var l;try{l=Promise}catch(e){l=function(){}}return n.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},n.__objToStr=i,n.__isDate=r,n.__isArray=o,n.__isRegExp=s,n.__getRegExpFlags=a,n}();"object"==typeof e&&e.exports&&(e.exports=n)}).call(t,n(5).Buffer)},2685:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,".add-certificate{width:700px;min-height:450px;display:flex;flex-direction:column}.add-certificate section{font-size:.9em}.add-certificate section file-importer{margin-top:16px}.add-certificate section span{color:#8c9696}.add-certificate section form{max-height:200px;overflow-y:auto;margin-top:16px}.add-certificate .import-certificate{display:flex;flex-direction:column}.add-certificate .import-certificate .row{flex:1;display:flex;margin-bottom:16px}.add-certificate .import-certificate .row .property{font-weight:600;flex-basis:20%;margin-right:5px}.add-certificate .import-certificate .row .value{flex:1}.add-certificate footer{justify-content:space-between}",""])},2686:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,"connection-profile table.profile-info.extra-space-right td{padding-right:34%}connection-profile table.profile-info.extra-space-left th{padding-left:1.5%}connection-profile table.profile-info tbody tr{box-shadow:none}connection-profile table.profile-info tbody tr th{text-align:start;padding-right:16px}connection-profile table.profile-info tbody tr td{vertical-align:text-top;padding:8px 0}connection-profile table.profile-info tbody tr td input[type=checkbox]{top:0;left:0}connection-profile table.profile-info tbody tr .text-below{padding:0}connection-profile button.certificate-button{padding:0 16px;margin-left:16px;min-width:0;border:1px solid #5068c2}connection-profile button.certificate-button svg.standard-icon{margin-right:0}connection-profile button.certificate-button.no-cert{border:1px dashed #b8c1c1}connection-profile button.certificate-button:not(.no-cert) svg{fill:#3f55af}connection-profile button.certificate-button:hover{background-color:#5068c2;border-color:#5068c2}connection-profile button.certificate-button:hover svg{fill:#fff}connection-profile button.certificate-button:focus{background-color:#5068c2;border-color:#5068c2}connection-profile button.certificate-button:focus svg{fill:#fff}connection-profile button.certificate-button.ca{margin-left:50px}connection-profile .profile-buttons{margin-left:16px}connection-profile footer{display:flex}connection-profile footer .info{color:#8c9696;font-style:italic}connection-profile footer.with-info{justify-content:space-between!important}connection-profile .profile-section{display:flex}connection-profile .profile-section .description{flex-basis:15%;color:#3f55af;padding-left:16px}connection-profile .profile-section .description.upper{text-transform:uppercase}connection-profile .profile-section .data{flex-basis:85%}connection-profile .profile-section .data .property-set{border-left:2px solid #3f55af;padding-left:16px;margin-bottom:32px}connection-profile .profile-section .data .profile-buttons{align-self:flex-end;padding-bottom:16px}connection-profile .profile-section.delimited{margin-bottom:32px;padding-bottom:32px;border-bottom:1px solid #f1f3f7}connection-profile .checkbox-label.ca{top:15px}connection-profile .help{color:#19273c;font-weight:300}",""])},2687:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,".view-certificate{width:660px;outline:0}.view-certificate .modal-body{display:flex;flex-direction:column}.view-certificate .modal-body .row{flex:1;display:flex;margin-bottom:16px}.view-certificate .modal-body .row .property{font-weight:600;flex-basis:20%;flex-shrink:1}.view-certificate .modal-body .row .value{flex:1;max-height:400px}.view-certificate .modal-body .row .value.cert{word-wrap:break-word;overflow-y:scroll}",""])},2692:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,".create-card{display:flex;flex-direction:column;background-color:#fdfdfd;margin-bottom:32px;margin-top:32px;border:1px solid #e3ecec;border-radius:4px}.create-card h1{margin-top:16px;margin-bottom:32px;margin-left:16px;font-size:20px;color:#19273c;letter-spacing:0;text-align:left}.create-card .profiles{display:flex;flex-direction:row;padding-left:16px}.create-card .profiles.section{border-bottom:1px solid #f1f3f7;margin-bottom:16px}.create-card .profiles .description{margin-right:64px;margin-top:4px;font-size:.7rem;color:#3f55af;min-width:182px}.create-card .profiles .description.upper{text-transform:uppercase}.create-card .profiles .create-route{margin-bottom:32px}.create-card .profiles .create-route p{color:#19273c;margin-top:0;margin-bottom:0;font-weight:300}.create-card .profiles .create-route .file-types-list{display:flex;flex-direction:row;margin-top:32px;margin-bottom:24px;flex-wrap:wrap;position:relative}.create-card .profiles .create-route .file-types-list .file-types-list-item{background-color:#fdfdfd;padding:16px;max-width:25rem;min-width:22rem}.create-card .profiles .create-route .file-types-list .file-types-list-item .description{color:#19273c;margin-left:32px}.create-card .profiles .create-route .file-types-list .file-types-list-item label.radio-label{font-weight:600}.create-card section{font-size:.9em}.create-card section span{color:#8c9696}.create-card section form{overflow-y:auto}",""])},2693:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,".create-card,.edit-card-credentials{display:flex;flex-direction:column;background-color:#fdfdfd;margin-bottom:32px;margin-top:32px;border:1px solid #e3ecec;border-radius:4px}.create-card h1,.edit-card-credentials h1{margin-top:16px;margin-bottom:32px;margin-left:16px;font-size:20px;color:#19273c;letter-spacing:0;text-align:left}.create-card .profiles,.edit-card-credentials .profiles{display:flex;flex-direction:row;padding-left:16px}.create-card .profiles.section,.edit-card-credentials .profiles.section{border-bottom:1px solid #f1f3f7;margin-bottom:16px}.create-card .profiles .description,.edit-card-credentials .profiles .description{margin-right:64px;margin-top:4px;font-size:.7rem;color:#3f55af;min-width:182px}.create-card .profiles .description.upper,.edit-card-credentials .profiles .description.upper{text-transform:uppercase}.create-card .profiles .create-route,.edit-card-credentials .profiles .create-route{margin-bottom:32px}.create-card .profiles .create-route p,.edit-card-credentials .profiles .create-route p{color:#19273c;margin-top:0;margin-bottom:0;font-weight:300}.create-card .profiles .create-route .file-types-list,.edit-card-credentials .profiles .create-route .file-types-list{display:flex;flex-direction:row;margin-top:32px;margin-bottom:24px;flex-wrap:wrap;position:relative}.create-card .profiles .create-route .file-types-list .file-types-list-item,.edit-card-credentials .profiles .create-route .file-types-list .file-types-list-item{background-color:#fdfdfd;padding:16px;max-width:25rem;min-width:22rem}.create-card .profiles .create-route .file-types-list .file-types-list-item .description,.edit-card-credentials .profiles .create-route .file-types-list .file-types-list-item .description{color:#19273c;margin-left:32px}.create-card .profiles .create-route .file-types-list .file-types-list-item label.radio-label,.edit-card-credentials .profiles .create-route .file-types-list .file-types-list-item label.radio-label{font-weight:600}.create-card section,.edit-card-credentials section{font-size:.9em}.create-card section span,.edit-card-credentials section span{color:#8c9696}.create-card section form,.edit-card-credentials section form{overflow-y:auto}.edit-card-credentials .profiles credentials .create-route .file-types-list{margin-top:0}.edit-card-credentials .profiles .create-route{margin-right:64px;margin-bottom:24px;border-bottom:1px solid #f1f3f7}.edit-card-credentials .profiles .description{flex-basis:10%}.edit-card-credentials .profiles>:last-child{flex-basis:70%}.edit-card-credentials .noCerts{display:flex;flex-direction:column;margin-bottom:32px;margin-right:64px}.edit-card-credentials .noCerts .option{display:flex;flex-direction:row;align-content:center;margin-top:16px}.edit-card-credentials .noCerts p{color:#19273c;line-height:19px;margin-top:0;margin-bottom:0;font-weight:300}.edit-card-credentials .roles{margin-bottom:32px}.edit-card-credentials .roles p{color:#19273c;margin-top:0;margin-bottom:0;font-weight:300}.edit-card-credentials .roles .role-list{display:flex;flex-wrap:wrap;margin-top:32px;position:relative}.edit-card-credentials .roles .role-list .description{margin-left:32px}.edit-card-credentials .roles .role-list .option{margin-bottom:32px}.edit-card-credentials file-importer{width:90%;padding-right:10px}.edit-card-credentials footer{width:100%}.edit-card-credentials footer .circle-path{stroke:#fdfdfd}",""])},2694:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,"import-identity .drawer-body{overflow-y:auto;height:calc(100vh - 112px - 64px - 32px - 47px - 32px - 32px)}import-identity .card-name,import-identity .current-card,import-identity .import-card{padding:0 32px}import-identity .card-name,import-identity .current-card{background-color:#f1f3f7;padding:32px;display:flex;justify-content:space-around}import-identity .card-name{flex-direction:column}import-identity .card-name label{margin-bottom:8px}",""])},2695:function(e,t,n){t=e.exports=n(20)(),t.push([e.i,"app-login{width:100vw;background-color:#f1f3f7}app-login section.header{display:flex;padding:32px 32px 16px;align-items:center;justify-content:space-between}app-login section.main-view{overflow-y:auto;height:calc(100vh - 63px - 96px - 55px);padding:16px 32px}app-login section.main-view div.connection-profile:first-child{margin-top:0}app-login section.main-view div.connection-profile{margin-top:32px;padding-left:32px}app-login section.main-view div.connection-profile .connection-profile-title{display:flex;margin-right:32px;align-items:baseline;justify-content:space-between}app-login section.main-view div.connection-profile .identities{display:flex;flex-wrap:wrap;margin-top:32px}app-login section.main-view div.connection-profile .identities .connection-profile-card{width:275px;min-height:325px;color:#b8c1c1;background-color:#f1f3f7}app-login section.main-view div.connection-profile .identities button.connection-profile-card{border:1px dashed #b8c1c1;border-radius:5px}app-login section.main-view div.connection-profile .identities button.connection-profile-card:focus,app-login section.main-view div.connection-profile .identities button.connection-profile-card:hover{background-color:hsla(0,0%,100%,.3)}app-login section.main-view div.connection-profile .identities .card-content{display:flex;flex-direction:column;justify-content:center;align-items:center}app-login section.main-view div.connection-profile .identities .card-content a{color:#8c9696;text-decoration:none}app-login section.main-view div.connection-profile .identities .card-content a:focus,app-login section.main-view div.connection-profile .identities .card-content a:hover{text-decoration:underline;outline:none}app-login section.main-view div.connection-profile .identities .card-content p{text-align:center}app-login section.main-view div.connection-profile .identities .card-content svg{fill:#b8c1c1;width:60px;height:55px}app-login section.main-view div.connection-profile .identities .connection-profile-card,app-login section.main-view div.connection-profile .identities identity-card{margin-left:32px;margin-bottom:32px}app-login section.sub-view{padding:32px;height:calc(100vh - 63px - 55px);overflow-y:auto}app-login section.sub-view .header{display:flex;justify-content:space-between;align-items:center}app-login section.sub-view .header button .rotate{transform:rotate(-180deg)}app-login section.sub-view .header button span{margin-left:8px}app-login section.edit-connection-profile{padding:32px;height:calc(100vh - 63px);overflow-y:auto}app-login section.edit-connection-profile .header button .rotate{transform:rotate(-180deg)}app-login section.edit-connection-profile .header button span{margin-left:8px}",""])},2697:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<div class="add-certificate" fileDragDrop (fileDragDropFileAccepted)="fileAccepted($event)"\n     (fileDragDropFileRejected)="fileRejected($event)"\n     (fileDragDropDragOver)="fileDetected($event)" (fileDragDropDragLeave)="fileLeft($event)"\n     [maxFileSize]="maxFileSize" [supportedFileTypes]="supportedFileTypes">\n    <div class="modal-header">\n        <h1>Import Certificate</h1>\n        <button class="icon modal-exit" (click)="activeModal.dismiss()">\n            <svg class="ibm-icon" aria-hidden="true">\n                <use xlink:href="#icon-close_new"></use>\n            </svg>\n        </button>\n    </div>\n    <section class="modal-body">\n        <span>Upload a Certificate (.pem) from your computer</span>\n        <file-importer (fileAccepted)="fileAccepted($event)" (fileRejected)="fileRejected($event)"\n                       [expandInput]="expandInput"\n                       [ngClass]="{\'expandFile\': expandInput}" [svgName]="\'#icon-pem_upload\'"></file-importer>\n        <span>Or paste your certificate credentials below</span>\n        <form class="import-certificate" #f="ngForm">\n            <div class="row">\n                <div class="property">\n                    Certificate*\n                </div>\n                <div class="value">\n                    <textarea name="addedCertificate" rows="4" [(ngModel)]="cert"></textarea>\n                </div>\n            </div>\n            <div *ngIf="type !== \'ca\'" class="row">\n                <div class="property">\n                  SSL Target Name Override\n                </div>\n                <div class="value">\n                    <input type="text" name="sslTargetNameOverride"[(ngModel)]="sslTargetNameOverride" />\n                </div>\n            </div>\n        </form>\n    </section>\n    <footer>\n        <button type="button" class="delete" (click)="removeCertificate()" [disabled]="!cert">\n            <span>Remove</span>\n        </button>\n        <div id="right-buttons" >\n          <button type="button" class="secondary" (click)="activeModal.dismiss();">\n              <span>Cancel</span>\n          </button>\n          <button type="button" class="primary" (click)="addCertificate()" [disabled]="!cert">\n              <span>Add</span>\n          </button>\n        </div>\n    </footer>\n</div>\n'},2698:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<div *ngIf="connectionProfileData">\n    <form (ngSubmit)="onSubmit()" #connectionProfileForm="ngForm" (keydown)="handleKeyPress($event)">\n        <section class="profile-section delimited">\n            <div class="description upper">Basic Configuration</div>\n            <div class="data">\n                <table class="profile-info extra-space-right extra-space-left">\n                    <colgroup>\n                        <col span="1" style="width: 11%;">\n                        <col span="1" style="width: 89%;">\n                    </colgroup>\n                    <tr>\n                        <th>\n                            Connection Profile Name*\n                        </th>\n                        <td>\n                            <input [ngClass]="{\'error-underline\': name.invalid && (name.dirty || name.touched)}"\n                                   type="text"\n                                   [(ngModel)]="basic.name" #name="ngModel" name="name" required>\n                            <div *ngIf="name.invalid && (name.dirty || name.touched)" class="error-message">\n                                Name is required\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>\n                            Profile Description\n                        </th>\n                        <td>\n                            <input type="text" [(ngModel)]="basic.description" #description="ngModel" name="description">\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>\n                            Organization*\n                        </th>\n                        <td>\n                            <input\n                                [ngClass]="{\'error-underline\': organization.invalid && (organization.dirty || organization.touched)}"\n                                type="text"\n                                [(ngModel)]="basic.organization" #organization="ngModel" name="organization" required>\n                            <div *ngIf="organization.invalid && (organization.dirty || organization.touched)"\n                                 class="error-message">\n                                organization is required\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>\n                            MSPID*\n                        </th>\n                        <td>\n                            <input\n                                [ngClass]="{\'error-underline\': mspid.invalid && (mspid.dirty || mspid.touched)}"\n                                type="text"\n                                [(ngModel)]="basic.mspid" #mspid="ngModel" name="mspid" required>\n                            <div *ngIf="mspid.invalid && (mspid.dirty || mspid.touched)" class="error-message">\n                                MSPID is required\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>\n                            Channel*\n                        </th>\n                        <td>\n                            <input\n                                [ngClass]="{\'error-underline\': channel.invalid && (channel.dirty || channel.touched)}"\n                                type="text"\n                                [(ngModel)]="basic.channel" #channel="ngModel" name="channel" required>\n                            <div *ngIf="channel.invalid && (channel.dirty || channel.touched)" class="error-message">\n                                Channel is required\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>\n                            Commit Timeout\n                        </th>\n                        <td>\n                            <input\n                                type="text"\n                                [(ngModel)]="basic.commitTimeout" #commitTimeout="ngModel" name="commitTimeout"\n                                [ngClass]="{\'error-underline\': (commitTimeout.invalid || !isNumber(basic.commitTimeout))&& (commitTimeout.dirty || commitTimeout.touched)}" >\n                            <div *ngIf="commitTimeout.invalid && (commitTimeout.dirty || commitTimeout.touched)" class="error-message">\n                                Commit timeout is required\n                            </div>\n                            <div *ngIf="!isNumber(basic.commitTimeout) && (commitTimeout.dirty || commitTimeout.touched)" class="error-message">\n                                Commit timeout must be a number\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </section>\n        <section class="profile-section delimited">\n            <div class="description upper">Orderer(s)</div>\n            <div class="data">\n                <div *ngFor="let orderer of orderers; let ordererIndex = index" class="property-set">\n                    <table class="profile-info">\n                        <colgroup>\n                            <col span="1" style="width: 10%;">\n                            <col span="1" style="width: 55%;">\n                            <col span="1" style="width: 34%;">\n                        </colgroup>\n                        <tr>\n                            <th>\n                                Name*\n                            </th>\n                            <td>\n                                <input\n                                    [ngClass]="{\'error-underline\': ordererName.invalid && (ordererName.dirty || ordererName.touched)}"\n                                    type="text"\n                                    [(ngModel)]="orderer.name" #ordererName="ngModel" name="ordererName{{ordererIndex}}" required>\n                                <div *ngIf="ordererName.invalid && (ordererName.dirty || ordererName.touched)"\n                                     class="error-message">\n                                    Orderer name is required\n                                </div>\n                            </td>\n                            <td>\n                                <button type="button"\n                                        class="certificate-button"\n                                        [ngClass]="{\'no-cert\': !orderer.tlsCACerts}"\n                                        (click)="openAddCertificateModal(ordererIndex,\'orderers\');">\n                                    <svg class="standard-icon" aria-hidden="true">\n                                        <use xlink:href="#icon-data-quality_16"></use>\n                                    </svg>\n                                </button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                Url*\n                            </th>\n                            <td>\n                                <input\n                                    [ngClass]="{\'error-underline\': ordererUrl.invalid && (ordererUrl.dirty || ordererUrl.touched)}"\n                                    type="text"\n                                    [(ngModel)]="orderer.url" #ordererUrl="ngModel" name="ordererUrl{{ordererIndex}}" required>\n                                <div *ngIf="ordererUrl.invalid && (ordererUrl.dirty || ordererUrl.touched)"\n                                     class="error-message">\n                                    Orderer url is required\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                    <table class="profile-info">\n                        <colgroup>\n                            <col span="1" style="width: 10%;">\n                            <col span="1" style="width: 55%;">\n                            <col span="1" style="width: 35%;">\n                        </colgroup>\n                        <tr>\n                            <th rowspan="4">GRPC Options</th>\n                            <th>\n                                GRPC max message length\n                            </th>\n                        </tr>\n                        <tr>\n                          <td>\n                              <input type="text" [(ngModel)]="orderer.grpcOptions.grpcMaxSendMessageLength" #ordererGrpcMaxSendMessageLength=\'ngModel\'\n                                     name="ordererGrpcMaxSendMessageLength{{ordererIndex}}"\n                                     [ngClass]="{\'error-underline\': !isNumber(orderer.grpcOptions.grpcMaxSendMessageLength) && (ordererGrpcMaxSendMessageLength.dirty || ordererGrpcMaxSendMessageLength.touched)}">\n                              <div *ngIf="!isNumber(orderer.grpcOptions.grpcMaxSendMessageLength) && (ordererGrpcMaxSendMessageLength.dirty || ordererGrpcMaxSendMessageLength.touched)"\n                                     class="error-message">\n                                     Value must be a number\n                              </div>\n                          </td>\n                          <td>\n                              <div class="profile-buttons">\n                                  <button type="button" class="secondary" *ngIf="ordererIndex === orderers.length -1"\n                                          (click)="addOrderer()">+ Add another\n                                  </button>\n                                  <button type="button" class="secondary" *ngIf="orderers.length > 1"\n                                          (click)="removeOrderer(ordererIndex)">\n                                      Remove orderer\n                                  </button>\n                              </div>\n                          </td>\n                        </tr>\n                        <tr>\n                          <th>\n                              GRPC http2 keep alive time\n                          </th>\n                        </tr>\n                        <tr>\n                          <td>\n                              <input type="text" [(ngModel)]="orderer.grpcOptions.grpcHttp2KeepAliveTime" #ordererGrpcHttp2KeepAliveTime=\'ngModel\'\n                                     name="ordererGrpcHttp2KeepAliveTime{{ordererIndex}}"\n                                     [ngClass]="{\'error-underline\': !isNumber(orderer.grpcOptions.grpcHttp2KeepAliveTime) && (ordererGrpcHttp2KeepAliveTime.dirty || ordererGrpcHttp2KeepAliveTime.touched)}" >\n                              <div *ngIf="!isNumber(orderer.grpcOptions.grpcHttp2KeepAliveTime) && (ordererGrpcHttp2KeepAliveTime.dirty || ordererGrpcHttp2KeepAliveTime.touched)"\n                                    class="error-message">\n                                    Value must be a number\n                              </div>\n                          </td>\n                        </tr>\n                    </table>\n                </div>\n\n                <table class="profile-info extra-space-right extra-space-left">\n                    <colgroup>\n                        <col span="1" style="width: 11%;">\n                        <col span="1" style="width: 89%;">\n                    </colgroup>\n                    <tr>\n                        <th>Timeout</th>\n                        <td>\n                            <input type="text" [(ngModel)]="ordererTimeout" #ordererTimeoutField=\'ngModel\'\n                                   name="ordererTimeoutField"\n                                   [ngClass]="{\'error-underline\': !isNumber(ordererTimeout) && (ordererTimeoutField.dirty || ordererTimeoutField.touched)}" >\n                            <div *ngIf="!isNumber(ordererTimeout) && (ordererTimeoutField.dirty || ordererTimeoutField.touched)"\n                                   class="error-message">\n                                   Value must be a number\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </section>\n        <section class="profile-section delimited">\n            <div class="description upper">Peer(s)</div>\n            <div class="data">\n                <div *ngFor="let peer of peers; let peerIndex = index" class="property-set">\n                    <table class="profile-info">\n                        <colgroup>\n                            <col span="1" style="width: 10%;">\n                            <col span="1" style="width: 55%;">\n                            <col span="1" style="width: 34%;">\n                        </colgroup>\n                        <tr>\n                            <th>\n                                Name*\n                            </th>\n                            <td>\n                                <input\n                                    [ngClass]="{\'error-underline\': peerName.invalid && (peerName.dirty || peerName.touched)}"\n                                    type="text"\n                                    [(ngModel)]="peer.name" #peerName="ngModel" name="peerName{{peerIndex}}" required>\n                                <div *ngIf="peerName.invalid && (peerName.dirty || peerName.touched)"\n                                     class="error-message">\n                                    Peer name is required\n                                </div>\n                            </td>\n                            <td>\n                                <button type="button"\n                                        class="certificate-button"\n                                        [ngClass]="{\'no-cert\': !peer.tlsCACerts}"\n                                        (click)="openAddCertificateModal(peerIndex,\'peers\');">\n                                    <svg class="standard-icon" aria-hidden="true">\n                                        <use xlink:href="#icon-data-quality_16"></use>\n                                    </svg>\n                                </button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                Url*\n                            </th>\n                            <td>\n                                <input\n                                    [ngClass]="{\'error-underline\': peerUrl.invalid && (peerUrl.dirty || peerUrl.touched)}"\n                                    type="text"\n                                    [(ngModel)]="peer.url" #peerUrl="ngModel" name="peerUrl{{peerIndex}}" required>\n                                <div *ngIf="peerUrl.invalid && (peerUrl.dirty || peerUrl.touched)"\n                                     class="error-message">\n                                    Peer url is required\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                    <table class="profile-info">\n                        <colgroup>\n                            <col span="1" style="width: 10%;">\n                            <col span="1" style="width: 55%;">\n                            <col span="1" style="width: 35%;">\n                        </colgroup>\n                        <tr>\n                            <th rowspan="4">GRPC Options</th>\n                            <th>GRPC max message length</th>\n                        </tr>\n                        <tr>\n                          <td class="text-below">\n                              <input type="text" [(ngModel)]="peer.grpcOptions.grpcMaxSendMessageLength" #peerGrpcMaxSendMessageLength=\'ngModel\'\n                                     name="peerGrpcMaxSendMessageLength{{peerIndex}}"\n                                     [ngClass]="{\'error-underline\': !isNumber(peer.grpcOptions.grpcMaxSendMessageLength) && (peerGrpcMaxSendMessageLength.dirty || peerGrpcMaxSendMessageLength.touched)}">\n                              <div *ngIf="!isNumber(peer.grpcOptions.grpcMaxSendMessageLength) && (peerGrpcMaxSendMessageLength.dirty || peerGrpcMaxSendMessageLength.touched)"\n                                     class="error-message">\n                                     Value must be a number\n                              </div>\n                          </td>\n                          <td class="text-below">\n                              <div class="profile-buttons">\n                                  <button type="button" class="secondary" *ngIf="peerIndex === peers.length -1"\n                                          (click)="addPeer()">+ Add another\n                                  </button>\n                                  <button type="button" class="secondary" *ngIf="peers.length > 1"\n                                          (click)="removePeer(peerIndex)">\n                                      Remove peer\n                                  </button>\n                              </div>\n                          </td>\n                        </tr>\n                        <tr>\n                          <th>\n                              GRPC http2 keep alive time\n                          </th>\n                        </tr>\n                        <tr>\n                          <td class="text-below">\n                              <input type="text" [(ngModel)]="peer.grpcOptions.grpcHttp2KeepAliveTime" #peerGrpcHttp2KeepAliveTime=\'ngModel\'\n                                     name="peerGrpcHttp2KeepAliveTime{{peerIndex}}"\n                                     [ngClass]="{\'error-underline\': !isNumber(peer.grpcOptions.grpcHttp2KeepAliveTime) && (peerGrpcHttp2KeepAliveTime.dirty || peerGrpcHttp2KeepAliveTime.touched)}" >\n                              <div *ngIf="!isNumber(peer.grpcOptions.grpcHttp2KeepAliveTime) && (peerGrpcHttp2KeepAliveTime.dirty || peerGrpcHttp2KeepAliveTime.touched)"\n                                    class="error-message">\n                                    Value must be a number\n                              </div>\n                          </td>\n                        </tr>\n                      </table>\n                      <table class="profile-info">\n                        <colgroup>\n                            <col span="1" style="width: 10%;">\n                            <col span="1" style="width: 20%;">\n                            <col span="1" style="width: 35%;">\n                            <col span="1" style="width: 35%;">\n                        </colgroup>\n                        <tr>\n                          <th rowspan="4">Roles</th>\n                          <th>\n                              Endorsing Peer\n                          </th>\n                          <td>\n                              <input type="checkbox" [(ngModel)]="peer.endorsingPeer" #peerRoleEndorsingPeer=\'ngModel\' name="peerRoleEndorsingPeer{{peerIndex}}" id="peerRoleEndorsingPeer{{peerIndex}}" />\n                              <label for="peerRoleEndorsingPeer{{peerIndex}}" class="checkbox-label" ></label>\n                          </td>\n                        </tr>\n                        <tr>\n                          <th>\n                              Chaincode Query Peer\n                          </th>\n                          <td>\n                              <input type="checkbox" [(ngModel)]="peer.chaincodeQuery" #peerRoleEndorsingPeer=\'ngModel\' name="peerRoleChaincodeQuery{{peerIndex}}" id="peerRoleChaincodeQuery{{peerIndex}}" />\n                              <label for="peerRoleChaincodeQuery{{peerIndex}}" class="checkbox-label" ></label>\n                          </td>\n                        </tr>\n                        <tr>\n                          <th>\n                              Ledger Query Peer\n                          </th>\n                          <td>\n                              <input type="checkbox" [(ngModel)]="peer.ledgerQuery" #peerRoleEndorsingPeer=\'ngModel\' name="peerRoleLedgerQuery{{peerIndex}}" id="peerRoleLedgerQuery{{peerIndex}}" />\n                              <label for="peerRoleLedgerQuery{{peerIndex}}" class="checkbox-label" ></label>\n                          </td>\n                        </tr>\n                        <tr>\n                          <th>\n                              Event Source\n                          </th>\n                          <td>\n                              <input type="checkbox" [(ngModel)]="peer.eventSource" #peerRoleEndorsingPeer=\'ngModel\' name="peerRoleEventSource{{peerIndex}}" id="peerRoleEventSource{{peerIndex}}" />\n                              <label for="peerRoleEventSource{{peerIndex}}" class="checkbox-label" ></label>\n                          </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                Part of organisation\n                            </th>\n                            <td>\n                                <input type="checkbox" [(ngModel)]="peer.organization" #peerOrganization=\'ngModel\' name="peerOrganization{{peerIndex}}" id="peerOrganization{{peerIndex}}"/>\n                                <label for="peerOrganization{{peerIndex}}" class="checkbox-label" ></label>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n\n                <div>\n                    <table class="profile-info extra-space-left extra-space-right">\n                        <colgroup>\n                            <col span="1" style="width: 10%;">\n                            <col span="1" style="width: 10%;">\n                            <col span="1" style="width: 80%;">\n                        </colgroup>\n                        <tr>\n                            <th rowspan="3">Timeout</th>\n                            <th>\n                                endorser\n                            </th>\n                            <td>\n                                <input type="text" [(ngModel)]="peerTimeOut.endorser" #peerTimeoutEndorser="ngModel"\n                                       name="peerTimeoutEndorser"\n                                       [ngClass]="{\'error-underline\': !isNumber(peerTimeOut.endorser) && (peerTimeoutEndorser.dirty || peerTimeoutEndorser.touched)}" >\n                                <div *ngIf="!isNumber(peerTimeOut.endorser) && (peerTimeoutEndorser.dirty || peerTimeoutEndorser.touched)"\n                                       class="error-message">\n                                       Value must be a number\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                eventHub\n                            </th>\n                            <td>\n                                <input type="text" [(ngModel)]="peerTimeOut.eventHub" #peerTimeoutEventHub="ngModel"\n                                       name="peerTimeoutEventHub"\n                                       [ngClass]="{\'error-underline\': !isNumber(peerTimeOut.eventHub) && (peerTimeoutEventHub.dirty || peerTimeoutEventHub.touched)}" >\n                                <div *ngIf="!isNumber(peerTimeOut.eventHub) && (peerTimeoutEventHub.dirty || peerTimeoutEventHub.touched)"\n                                       class="error-message">\n                                       Value must be a number\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                eventReg\n                            </th>\n                            <td>\n                                <input type="text" [(ngModel)]="peerTimeOut.eventReg" #peerTimeoutEventReg="ngModel"\n                                       name="peerTimeoutEventReg"\n                                       [ngClass]="{\'error-underline\': !isNumber(peerTimeOut.eventReg) && (peerTimeoutEventReg.dirty || peerTimeoutEventReg.touched)}" >\n                                <div *ngIf="!isNumber(peerTimeOut.eventReg) && (peerTimeoutEventReg.dirty || peerTimeoutEventReg.touched)"\n                                       class="error-message">\n                                       Value must be a number\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </section>\n        <section class="profile-section delimited">\n            <div class="description upper">Certificate Authority</div>\n            <div class="data">\n                <table class="profile-info extra-space-left">\n                    <colgroup>\n                        <col span="1" style="width: 11%;">\n                        <col span="1" style="width: 55%;">\n                        <col span="1" style="width: 34%;">\n                    </colgroup>\n                    <tr>\n                        <th>\n                            Name\n                        </th>\n                        <td>\n                            <input type="text" [(ngModel)]="ca.caName" name="caName">\n                        </td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <th>\n                            Url*\n                        </th>\n                        <td>\n                            <input\n                                [ngClass]="{\'error-underline\': caUrl.invalid && (caUrl.dirty || caUrl.touched)}"\n                                type="text"\n                                [(ngModel)]="ca.url" #caUrl="ngModel" (keyup)="setVerify()"\n                                name="caUrl" required>\n                            <div *ngIf="caUrl.invalid && (caUrl.dirty || caUrl.touched)" class="error-message">\n                                Certificate authority url is required\n                            </div>\n                        </td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <th>\n                            Verify\n                        </th>\n                        <td>\n                            <input type="checkbox" (click)="clearCaTls()" [(ngModel)]="ca.httpOptions.verify" #caHttpOptionsVerify="ngModel" name="caHttpOptionsVerify" id="caHttpOptionsVerify" [disabled]="ca.url.substring(ca.url.indexOf(\'://\')-1, ca.url.indexOf(\'://\')) !== \'s\'" />\n                            <label for="caHttpOptionsVerify" class="checkbox-label ca" ></label>\n                            <button type="button"\n                                    class="certificate-button ca"\n                                    [ngClass]="{\'no-cert\': !ca.tlsCACerts}"\n                                    (click)="openAddCertificateModal(0,\'ca\');"\n                                    [disabled]="!ca.httpOptions.verify">\n                                <svg class="standard-icon" aria-hidden="true">\n                                    <use xlink:href="#icon-data-quality_16"></use>\n                                </svg>\n                            </button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </section>\n        <footer>\n            <div>\n                <button class="secondary" (click)="stopEditing()">Cancel</button>\n                <button class="primary" type="submit" [disabled]="!formValid(connectionProfileForm.form)" >Next</button>\n            </div>\n        </footer>\n    </form>\n</div>\n'},2699:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<div class="view-certificate" tabindex="-1">\n  <div class="modal-header">\n    <svg class="ibm-icon" aria-hidden="true">\n      <use xlink:href="#icon-data-quality_16"></use>\n    </svg>\n    <h1>Certificate Details</h1>\n    <button class="icon modal-exit" (click)="activeModal.dismiss()">\n      <svg class="ibm-icon" aria-hidden="true">\n        <use xlink:href="#icon-close_new"></use>\n      </svg>\n    </button>\n  </div>\n  <section class="modal-body">\n    <div class="row">\n        <div class="property">\n          Certificate*\n        </div>\n        <div class="value cert">\n          {{certificate}}\n        </div>\n      </div>\n  </section>\n  <footer>\n    <button type="button" class="primary" (click)="activeModal.dismiss()">OK</button>\n  </footer>\n</div>\n'},2704:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<section class="create-identity-card">\n    <div *ngIf="creatingWithProfile" class="create-card">\n        <h1>Create A Business Network Card</h1>\n        <connection-profile (profileUpdated)="finishedEditingConnectionProfile($event)"\n                            [connectionProfile]="wrappedConnectionProfile"></connection-profile>\n    </div>\n    <div *ngIf="editingCredentials">\n        <edit-card-credentials (idCardAdded)="completeCardAddition($event)"\n                      [connectionProfile]="wrappedConnectionProfile"></edit-card-credentials>\n    </div>\n    <div *ngIf="creatingIdCard" class="create-card">\n        <h1>Create A Business Network Card</h1>\n        <section class="profiles">\n            <div class="description upper"><b>Select blockchain deployment</b></div>\n            <div>\n                <form #optionForm="ngForm">\n                    <div class="create-route" *ngIf="connectionProfileRefs.length>=2">\n                        <p>Create a business network card for a Blockchain you already use with Composer:</p>\n                        <div class="file-types-list">\n                            <div class="file-types-list-item" *ngFor="let profileRef of connectionProfileRefs | slice:0:-1; let i=index">\n                                    <input type="radio" id="{{ i }}" name="file-type"\n                                        (change)="setConnectionProfile(profileRef)"/>\n                                    <label class="radio-label" for="{{ i }}"><h3>{{connectionProfileNames.get(profileRef)}}</h3></label>\n                                    <div class="description"><p>{{ connectionProfiles.get(profileRef).description ? connectionProfiles.get(profileRef).description : \'No description specified\' }}</p></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="create-route">\n                        <p>Create a business network card for Blockchain you have not connected to before:</p>\n                        <div class="file-types-list">\n                            <div class="file-types-list-item">\n                                <input type="radio" id="new-v1" name="file-type"\n                                    (change)="setConnectionProfile(\'_$v1\')">\n                                <label class="radio-label" for="new-v1"><h3>Hyperledger Fabric v1.2</h3></label>\n                                <div class="description"><p>Connect to a new v1.2 Blockchain</p></div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </section>\n        <footer>\n            <button type="button" class="secondary" (click)="cancelCreate();">\n                <span>Cancel</span>\n            </button>\n            <button *ngIf = "newConnection" type="button" class="primary" (click)="createWithNewProfile()" [disabled]="!profileChosen">\n                <span>Next</span>\n            </button>\n            <button *ngIf = "!newConnection" type="button" class="primary" (click)="createWithExistingProfile()" [disabled]="!profileChosen">\n                <span>Next</span>\n            </button>\n        </footer>\n    </div>\n</section>\n'},2705:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<div class="import">\n    <section class="edit-card-credentials">\n        <h1>Create Business Network Card</h1>\n        <section class="profiles section">\n            <div class="description upper"><b>Provide security credentials</b></div>\n            <div>\n                <p>You must provide one of two types of credential to create a business network card:</p>\n                <credentials (credentials)="updateCredentials($event)"></credentials>\n            </div>\n        </section>\n        <section class="profiles">\n            <div class="description upper"><b>Card Type</b></div>\n            <div class="holding-div">\n                <div class="create-route">\n                    <p>What type of card do you want to create?</p>\n                    <div class="file-types-list">\n                        <div class="file-types-list-item">\n                            <input type="radio" id="participantCard" name="participant-type" [checked]="true"\n                                   (change)="useParticipantCardType(true)">\n                            <label class="radio-label" for="participantCard"><h3>Participant Card</h3></label>\n                            <div class="description"><p>A business network card that can be used to connect a business\n                                network.</p></div>\n                        </div>\n                        <div class="file-types-list-item">\n                            <input type="radio" id="adminCard" name="participant-type"\n                                   (change)="useParticipantCardType(false)">\n                            <label class="radio-label" for="adminCard"><h3>Admin Card</h3></label>\n                            <div class="description"><p>A business network card that can be used to install and start\n                                a business network.</p></div>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf="useParticipantCard" class="noCerts">\n                    <p>The name of the Business Network to which you are going to connect.</p>\n                    <form #busNetForm="ngForm" (submit)="submitCard()" (keydown)="submitCard($event)">\n                        <table class="no-shadow">\n                            <colgroup>\n                                <col span="1" style="width: 20%;">\n                                <col span="1" style="width: 80%;">\n                            </colgroup>\n                            <tr>\n                                <th>\n                                    <label for="busNetName"><h3>Name of Business Network</h3></label>\n                                </th>\n                                <td>\n                                    <input type="text" [(ngModel)]="busNetName" id="busNetName" name="busNetName"\n                                           autocomplete="off">\n                                </td>\n                            </tr>\n                        </table>\n                        <p>Give the business network card that will be created a name</p>\n                        <table class="no-shadow">\n                            <colgroup>\n                                <col span="1" style="width: 20%;">\n                                <col span="1" style="width: 80%;">\n                            </colgroup>\n                            <tr>\n                                <th>\n                                    <label for="cardName"><h3>Name of the card</h3></label>\n                                </th>\n                                <td>\n                                    <input type="text" [ngModel]="cardName" id="cardName" name="cardName"\n                                           (ngModelChange)="setCardName($event)"\n                                           autocomplete="off">\n                                    <div *ngIf="!cardNameValid" class="error-message">The card name must be unique</div>\n                                </td>\n                            </tr>\n                        </table>\n                    </form>\n                </div>\n                <div *ngIf="!useParticipantCard" class="roles">\n                    <p>Roles can be added to an identity for installing and starting a business network.</p>\n                    <div class="role-list">\n                        <div class="option">\n                            <input type="checkbox" [(ngModel)]="peerAdmin" id="peerAdmin" name="peerAdmin"\n                                   autocomplete="off">\n                            <label for="peerAdmin" class="checkbox-label"><h3>Peer Admin</h3></label>\n                            <div class="description"><p>A role that has permission to install a business network</p>\n                            </div>\n                        </div>\n                        <div class="option">\n                            <input type="checkbox" [(ngModel)]="channelAdmin" id="channelAdmin" name="channelAdmin"\n                                   autocomplete="off">\n                            <label for="channelAdmin" class="checkbox-label"><h3>Channel Admin</h3></label>\n                            <div class="description"><p>A role that has permission to start a business network</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <footer>\n            <button type="button" class="secondary" (click)="close();">\n                <span>Cancel</span>\n            </button>\n            <button type="button" class="primary" [disabled]="!validContents() ||  addInProgress"\n                    (click)="addIdentityCard();">\n                <div *ngIf="!addInProgress">\n                    <span>Create</span>\n                </div>\n                <div *ngIf="addInProgress" class="ibm-spinner-indeterminate small loop">\n                    <div class="loader">\n                        <svg class="circular" viewBox="25 25 50 50">\n                            <circle class="circle-path" cx="50" cy="50" r="20"/>\n                        </svg>\n                    </div>\n                </div>\n            </button>\n        </footer>\n    </section>\n</div>\n\n'},2706:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<section class="import-identity" fileDragDrop (fileDragDropFileAccepted)="fileAccepted($event)"\n         (fileDragDropFileRejected)="fileRejected($event)"\n         (fileDragDropDragOver)="fileDetected($event)" (fileDragDropDragLeave)="fileLeft($event)"\n         [maxFileSize]="maxFileSize" [supportedFileTypes]="supportedFileTypes">\n    <header class="drawer-header">\n        <h1>Import Business Network Card</h1>\n        <p>Drop a Composer Business Network (.card file) here to add it to My Business Networks:</p>\n\n        <button class="icon modal-exit" (click)="activeDrawer.dismiss();">\n            <svg class="ibm-icon" aria-hidden="true">\n                <use xlink:href="#icon-close_new"></use>\n            </svg>\n        </button>\n    </header>\n    <section class="drawer-body">\n        <div class="import-card" *ngIf="!identityCard">\n            <file-importer (fileAccepted)="fileAccepted($event)" (fileRejected)="fileRejected($event)"\n                           [expandInput]="expandInput"\n                           [ngClass]="{\'expandFile\': expandInput}" [svgName]="\'#icon-Card_Upload\'"\n                           [maxFileSize]="maxFileSize" [supportedFileTypes]="supportedFileTypes"></file-importer>\n        </div>\n\n        <div class="current-card" *ngIf="identityCard">\n            <identity-card [identity]="identityCard" [preview]="true" [showDismissIcon]="true"\n                           (onDismiss)="removeFile()">\n            </identity-card>\n        </div>\n        <div class="card-name" *ngIf="identityCard">\n            <label for="cardName"><h3>Give the imported card a name</h3></label>\n            <input id="cardName" [ngClass]="{\'error-underline\': !cardNameValid}" type="text"\n                   [ngModel]="cardName"\n                   (ngModelChange)="setCardName($event)"\n                   placeholder="eg. admin@{{identityCard.getBusinessNetworkName()}}">\n            <div *ngIf="!cardNameValid" class="error-message">The card name must be unique</div>\n        </div>\n    </section>\n    <footer class="drawer-footer">\n        <button type="button" class="secondary" (click)="activeDrawer.dismiss();">\n            <span>Cancel</span>\n        </button>\n        <button id="" type="button" id="importBtn" class="primary" (click)="import();" [disabled]="!identityCard || !cardNameValid">\n            <span *ngIf="!importInProgress">Import</span>\n            <div *ngIf="importInProgress" class="ibm-spinner-indeterminate small loop">\n                <div class="loader">\n                    <svg class="circular" viewBox="25 25 50 50">\n                        <circle class="circle-path" cx="50" cy="50" r="20"/>\n                    </svg>\n                </div>\n            </div>\n        </button>\n    </footer>\n</section>\n'},2707:function(e,t){e.exports='\x3c!--\n Licensed under the Apache License, Version 2.0 (the "License");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an "AS IS" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n--\x3e\n<section *ngIf="!showSubScreen" class="header">\n    <h1>My Business Networks</h1>\n    <div *ngIf="!showSubScreen">\n        <button id="importIdCard" *ngIf="usingLocally" type="button" class="secondary" (click)="importIdentity()">\n            <span>Import Business Network Card</span>\n        </button>\n        <button id="createIdCard" *ngIf="usingLocally" type="button" class="secondary" (click)="goCreateCard()">\n            <span>Create Business Network Card</span>\n        </button>\n    </div>\n</section>\n<section *ngIf="!showSubScreen" class="main-view">\n    <div class="connection-profile" *ngFor="let connectionProfileRef of connectionProfileRefs;">\n        <span class="connection-profile-title">\n            <h2>Connection: {{connectionProfileRef === \'web-$default\' ? \'Web Browser\' : this.connectionProfileNames.get(connectionProfileRef) }}</h2>\n        </span>\n        <div class="identities">\n            <identity-card *ngIf="configService.isWebOnly() && connectionProfileRef === \'web-$default\' && idCards.size === indestructibleCards.length"\n                           (onDeploySample)="deploySample(connectionProfileRef)"\n                           [link]="config.links.tutorial"\n                           [showSpecial]="true">\n            </identity-card>\n            <identity-card *ngFor="let cardRef of idCardRefs.get(connectionProfileRef)"\n                           [identity]="idCards.get(cardRef)"\n                           [indestructible]="(indestructibleCards.indexOf(cardRef) > -1)"\n                           [cardRef]="cardRef"\n                           (onConnect)="changeIdentity(cardRef, connectionProfileRef)"\n                           (onExport)="exportIdentity(cardRef)"\n                           (onDelete)="removeIdentity(cardRef)">\n            </identity-card>\n            <button type="button" class="connection-profile-card"\n                    *ngIf="canDeploy(connectionProfileRef)"\n                    (click)="goDeploy(connectionProfileRef)">\n                <span class="card-content">\n                    <svg class="ibm-icon" aria-hidden="true">\n                        <use xlink:href="#icon-Network_Create"></use>\n                    </svg>\n                    <p>Deploy a new business network</p>\n                </span>\n            </button>\n            <div class="connection-profile-card card-content" *ngIf="!canDeploy(connectionProfileRef)">\n                <svg class="ibm-icon" aria-hidden="true">\n                    <use xlink:href="#icon-get-information_64"></use>\n                </svg>\n                <p>You must <a href="javascript:void(0);" (click)="importIdentity()">import</a> identity cards with the correct admin rights for deploying new business networks.</p>\n                <p><a href="{{ config.docURL }}/business-network/bnd-deploy.html" target="_blank">Learn more</a>.</p>\n            </div>\n        </div>\n    </div>\n</section>\n<section class="sub-view" *ngIf="showSubScreen">\n    <div class="header">\n        <button type="button" class="action" (click)="goLoginMain()">\n            <svg class="ibm-icon vertical-top rotate" aria-hidden="true">\n                <use xlink:href="#icon-forward_16"></use>\n            </svg>\n            <span>My Wallet</span>\n        </button>\n        <tutorial-link [hidden]="config.links.tutorial === \'\'" [link]="config.links.tutorial" *ngIf="showDeployNetwork"></tutorial-link>\n    </div>\n    <div *ngIf="showDeployNetwork">\n        <deploy-business-network (finishedSampleImport)="finishedDeploying()" [showCredentials]="showCredentials"></deploy-business-network>\n    </div>\n    <div *ngIf="creatingIdCard">\n        <create-identity-card [connectionProfileRefs]="connectionProfileRefs"\n                              [connectionProfileNames]="connectionProfileNames"\n                              [connectionProfiles]="connectionProfiles"\n                              (finishedCardCreation)="finishedCardCreation($event)"></create-identity-card>\n    </div>\n</section>\n<app-footer></app-footer>\n'},2708:function(e,t,n){var i=n(2685);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2709:function(e,t,n){var i=n(2686);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2710:function(e,t,n){var i=n(2687);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2715:function(e,t,n){var i=n(2692);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2716:function(e,t,n){var i=n(2693);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2717:function(e,t,n){var i=n(2694);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)},2718:function(e,t,n){var i=n(2695);"string"==typeof i&&(i=[[e.i,i,""]]);n(23)(i,{});i.locals&&(e.exports=i.locals)}});